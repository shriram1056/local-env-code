{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useRouter } from 'next/router';\nimport { useEffect } from 'react';\nimport { useMeQuery } from '../generated/graphql';\nexport var useIsAuth = function useIsAuth() {\n  _s();\n\n  var _useMeQuery = useMeQuery(),\n      data = _useMeQuery.data,\n      loading = _useMeQuery.loading; // urql caching, so this wont make another request\n\n\n  var router = useRouter();\n  useEffect(function () {\n    if (!loading && !(data !== null && data !== void 0 && data.me)) {\n      router.replace('/login?next=' + router.pathname);\n    }\n  }, [loading, data, router]);\n};\n\n_s(useIsAuth, \"HFzD9whMdVlJlXTSiGTGw6bEFlE=\", false, function () {\n  return [useMeQuery, useRouter];\n});","map":{"version":3,"sources":["/home/shriram/Downloads/lireddit/lireddit-web/src/utils/useIsAuth.ts"],"names":["useRouter","useEffect","useMeQuery","useIsAuth","data","loading","router","me","replace","pathname"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,UAAT,QAA2B,sBAA3B;AAEA,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AAAA;;AAAA,oBACHD,UAAU,EADP;AAAA,MACrBE,IADqB,eACrBA,IADqB;AAAA,MACfC,OADe,eACfA,OADe,EACU;;;AACvC,MAAMC,MAAM,GAAGN,SAAS,EAAxB;AACAC,EAAAA,SAAS,CAAC,YAAM;AACd,QAAI,CAACI,OAAD,IAAY,EAACD,IAAD,aAACA,IAAD,eAACA,IAAI,CAAEG,EAAP,CAAhB,EAA2B;AACzBD,MAAAA,MAAM,CAACE,OAAP,CAAe,iBAAiBF,MAAM,CAACG,QAAvC;AACD;AACF,GAJQ,EAIN,CAACJ,OAAD,EAAUD,IAAV,EAAgBE,MAAhB,CAJM,CAAT;AAKD,CARM;;GAAMH,S;UACeD,U,EACXF,S","sourcesContent":["import { useRouter } from 'next/router'\nimport { useEffect } from 'react'\nimport { useMeQuery } from '../generated/graphql'\n\nexport const useIsAuth = () => {\n  const { data, loading } = useMeQuery() // urql caching, so this wont make another request\n  const router = useRouter()\n  useEffect(() => {\n    if (!loading && !data?.me) {\n      router.replace('/login?next=' + router.pathname)\n    }\n  }, [loading, data, router])\n}\n"]},"metadata":{},"sourceType":"module"}