{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/shriram/Downloads/lireddit/lireddit-web/src/pages/change-password/[token].tsx\";\n// next js convention to use variable in url [variable]\nimport router from '';\nimport { Box, Button } from '@chakra-ui/react';\nimport { Form, Formik } from 'formik';\nimport React from 'react';\nimport { InputField } from '../../components/inputField';\nimport { Wrapper } from '../../components/Wrapper';\nimport { toErrorMap } from '../../utils/toErrorMap';\nimport login from '../login';\n\nconst ChangePassword = ({\n  token\n}) => {\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    variant: \"small\",\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        usernameOrEmail: '',\n        password: ''\n      },\n      onSubmit: async (values, {\n        setErrors\n      }) => {\n        var _response$data, _response$data2;\n\n        const response = await login(values); // this return a promise needed to stop the spinner or isSubmitting\n\n        if ((_response$data = response.data) !== null && _response$data !== void 0 && _response$data.login.errors) {\n          setErrors(toErrorMap(response.data.login.errors));\n        } else if ((_response$data2 = response.data) !== null && _response$data2 !== void 0 && _response$data2.login.user) {\n          // worked\n          router.push('/');\n        }\n      },\n      children: ({\n        isSubmitting\n      }) => /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(InputField, {\n          name: \"usernameOrEmail\",\n          placeholder: \"username or Email\",\n          label: \"username or Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          mt: 4,\n          children: /*#__PURE__*/_jsxDEV(InputField, {\n            name: \"password\",\n            placeholder: \"password\",\n            label: \"password\",\n            type: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          mt: 4,\n          type: \"submit\",\n          colorScheme: \"teal\",\n          isLoading: isSubmitting,\n          children: \"login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n\nChangePassword.getInitialProps = ({\n  query\n}) => {\n  return {\n    token: query.token\n  };\n};\n\nexport default ChangePassword;","map":{"version":3,"sources":["/home/shriram/Downloads/lireddit/lireddit-web/src/pages/change-password/[token].tsx"],"names":["router","Box","Button","Form","Formik","React","InputField","Wrapper","toErrorMap","login","ChangePassword","token","usernameOrEmail","password","values","setErrors","response","data","errors","user","push","isSubmitting","getInitialProps","query"],"mappings":";;AAAA;AACA,OAAOA,MAAP,MAAmB,EAAnB;AACA,SAASC,GAAT,EAAcC,MAAd,QAA4B,kBAA5B;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,QAA7B;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,6BAA3B;AACA,SAASC,OAAT,QAAwB,0BAAxB;AACA,SAASC,UAAT,QAA2B,wBAA3B;AACA,OAAOC,KAAP,MAAkB,UAAlB;;AAEA,MAAMC,cAA2C,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AACjE,sBACE,QAAC,OAAD;AAAS,IAAA,OAAO,EAAC,OAAjB;AAAA,2BACE,QAAC,MAAD;AACE,MAAA,aAAa,EAAE;AAAEC,QAAAA,eAAe,EAAE,EAAnB;AAAuBC,QAAAA,QAAQ,EAAE;AAAjC,OADjB;AAEE,MAAA,QAAQ,EAAE,OAAOC,MAAP,EAAe;AAAEC,QAAAA;AAAF,OAAf,KAAiC;AAAA;;AACzC,cAAMC,QAAQ,GAAG,MAAMP,KAAK,CAACK,MAAD,CAA5B,CADyC,CACJ;;AAErC,8BAAIE,QAAQ,CAACC,IAAb,2CAAI,eAAeR,KAAf,CAAqBS,MAAzB,EAAiC;AAC/BH,UAAAA,SAAS,CAACP,UAAU,CAACQ,QAAQ,CAACC,IAAT,CAAcR,KAAd,CAAoBS,MAArB,CAAX,CAAT;AACD,SAFD,MAEO,uBAAIF,QAAQ,CAACC,IAAb,4CAAI,gBAAeR,KAAf,CAAqBU,IAAzB,EAA+B;AACpC;AACAnB,UAAAA,MAAM,CAACoB,IAAP,CAAY,GAAZ;AACD;AACF,OAXH;AAAA,gBAaG,CAAC;AAAEC,QAAAA;AAAF,OAAD,kBACC,QAAC,IAAD;AAAA,gCACE,QAAC,UAAD;AACE,UAAA,IAAI,EAAC,iBADP;AAEE,UAAA,WAAW,EAAC,mBAFd;AAGE,UAAA,KAAK,EAAC;AAHR;AAAA;AAAA;AAAA;AAAA,gBADF,eAME,QAAC,GAAD;AAAK,UAAA,EAAE,EAAE,CAAT;AAAA,iCACE,QAAC,UAAD;AACE,YAAA,IAAI,EAAC,UADP;AAEE,YAAA,WAAW,EAAC,UAFd;AAGE,YAAA,KAAK,EAAC,UAHR;AAIE,YAAA,IAAI,EAAC;AAJP;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBANF,eAcE,QAAC,MAAD;AACE,UAAA,EAAE,EAAE,CADN;AAEE,UAAA,IAAI,EAAC,QAFP;AAGE,UAAA,WAAW,EAAC,MAHd;AAIE,UAAA,SAAS,EAAEA,YAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAdF;AAAA;AAAA;AAAA;AAAA;AAAA;AAdJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA2CD,CA5CD;;AA8CAX,cAAc,CAACY,eAAf,GAAiC,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAC9C,SAAO;AACLZ,IAAAA,KAAK,EAAEY,KAAK,CAACZ;AADR,GAAP;AAGD,CAJD;;AAMA,eAAeD,cAAf","sourcesContent":["// next js convention to use variable in url [variable]\nimport router from ''\nimport { Box, Button } from '@chakra-ui/react'\nimport { Form, Formik } from 'formik'\nimport { NextPage } from 'next'\nimport React from 'react'\nimport { InputField } from '../../components/inputField'\nimport { Wrapper } from '../../components/Wrapper'\nimport { toErrorMap } from '../../utils/toErrorMap'\nimport login from '../login'\n\nconst ChangePassword: NextPage<{ token: string }> = ({ token }) => {\n  return (\n    <Wrapper variant=\"small\">\n      <Formik\n        initialValues={{ usernameOrEmail: '', password: '' }}\n        onSubmit={async (values, { setErrors }) => {\n          const response = await login(values) // this return a promise needed to stop the spinner or isSubmitting\n\n          if (response.data?.login.errors) {\n            setErrors(toErrorMap(response.data.login.errors))\n          } else if (response.data?.login.user) {\n            // worked\n            router.push('/')\n          }\n        }}\n      >\n        {({ isSubmitting }) => (\n          <Form>\n            <InputField\n              name=\"usernameOrEmail\"\n              placeholder=\"username or Email\"\n              label=\"username or Email\"\n            />\n            <Box mt={4}>\n              <InputField\n                name=\"password\"\n                placeholder=\"password\"\n                label=\"password\"\n                type=\"password\"\n              />\n            </Box>\n            <Button\n              mt={4}\n              type=\"submit\"\n              colorScheme=\"teal\"\n              isLoading={isSubmitting}\n            >\n              login\n            </Button>\n          </Form>\n        )}\n      </Formik>\n    </Wrapper>\n  )\n}\n\nChangePassword.getInitialProps = ({ query }) => {\n  return {\n    token: query.token as string,\n  }\n}\n\nexport default ChangePassword\n"]},"metadata":{},"sourceType":"module"}