{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"/home/shriram/Downloads/lireddit/lireddit-web/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/shriram/Downloads/lireddit/lireddit-web/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/shriram/Downloads/lireddit/lireddit-web/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/home/shriram/Downloads/lireddit/lireddit-web/src/pages/change-password/[token].tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\n// you have to name the file as [name].\n//the name can't be anything, the name should match the variable name given in the link in  server.\n// change this to some other name than server to see error\nimport { Box, Button, Flex, Link } from '@chakra-ui/react';\nimport { Form, Formik } from 'formik';\nimport { withUrqlClient } from 'next-urql';\nimport NextLink from 'next/link';\nimport { useRouter } from 'next/router';\nimport React, { useState } from 'react';\nimport { InputField } from '../../components/inputField';\nimport { Wrapper } from '../../components/Wrapper';\nimport { useChangePasswordMutation } from '../../generated/graphql';\nimport { createUrqlClient } from '../../utils/createUrqlClient';\nimport { toErrorMap } from '../../utils/toErrorMap'; //NextPage<{ token: string }>\n// this means that whatever after http://localhost:3000/change-password/ is stored in 'token' variable. the variable name is used for query\n// this token variable is accessed via query object in getinitialprops and passed to ({ token }) => {\n\nvar ChangePassword =\n/*<{ token: string }> */\nfunction ChangePassword()\n/*{ token }*/\n{\n  _s();\n\n  var router = useRouter();\n\n  var _useChangePasswordMut = useChangePasswordMutation(),\n      _useChangePasswordMut2 = _slicedToArray(_useChangePasswordMut, 2),\n      changePassword = _useChangePasswordMut2[1];\n\n  var _useState = useState(''),\n      tokenError = _useState[0],\n      setTokenError = _useState[1];\n\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    variant: \"small\",\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        newPassword: ''\n      },\n      onSubmit: /*#__PURE__*/function () {\n        var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values, _ref) {\n          var _response$data, _response$data2;\n\n          var setErrors, response, errorMap;\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  setErrors = _ref.setErrors;\n                  _context.next = 3;\n                  return changePassword({\n                    newPassword: values.newPassword,\n                    token: typeof router.query.token === 'string' ? router.query.token : ''\n                  });\n\n                case 3:\n                  response = _context.sent;\n\n                  if ((_response$data = response.data) !== null && _response$data !== void 0 && _response$data.changePassword.errors) {\n                    errorMap = toErrorMap(response.data.changePassword.errors);\n\n                    if ('token' in errorMap) {\n                      setTokenError(errorMap.token);\n                    } // The in operator returns true if the specified property is in the specified object\n\n\n                    setErrors(errorMap);\n                  } else if ((_response$data2 = response.data) !== null && _response$data2 !== void 0 && _response$data2.changePassword.user) {\n                    // worked\n                    router.push('/');\n                  }\n\n                case 5:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        return function (_x, _x2) {\n          return _ref2.apply(this, arguments);\n        };\n      }(),\n      children: function children(_ref3) {\n        var isSubmitting = _ref3.isSubmitting;\n        return /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(InputField, {\n            name: \"newPassword\",\n            placeholder: \"new password\",\n            label: \"New Password\",\n            type: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, _this), tokenError ? /*#__PURE__*/_jsxDEV(Flex, {\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              mr: 2,\n              style: {\n                color: 'red'\n              },\n              children: tokenError\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 17\n            }, _this), /*#__PURE__*/_jsxDEV(NextLink, {\n              href: \"/forgot-password\",\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                children: \"click here to get a new one\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 19\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 17\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, _this) : null, /*#__PURE__*/_jsxDEV(Button, {\n            mt: 4,\n            type: \"submit\",\n            colorScheme: \"teal\",\n            isLoading: isSubmitting,\n            children: \"change password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, _this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, _this);\n}; // ChangePassword.getInitialProps = ({ query }) => {\n//   return {\n//     token: query.token as string,\n//   }\n// }\n\n\n_s(ChangePassword, \"72KrU46ZzG1+BH3OGhB0j6CEbZk=\", false, function () {\n  return [useRouter, useChangePasswordMutation];\n});\n\n_c = ChangePassword;\nexport default withUrqlClient(createUrqlClient, {\n  ssr: false\n})(ChangePassword);\n\nvar _c;\n\n$RefreshReg$(_c, \"ChangePassword\");","map":{"version":3,"sources":["/home/shriram/Downloads/lireddit/lireddit-web/src/pages/change-password/[token].tsx"],"names":["Box","Button","Flex","Link","Form","Formik","withUrqlClient","NextLink","useRouter","React","useState","InputField","Wrapper","useChangePasswordMutation","createUrqlClient","toErrorMap","ChangePassword","router","changePassword","tokenError","setTokenError","newPassword","values","setErrors","token","query","response","data","errors","errorMap","user","push","isSubmitting","color","ssr"],"mappings":"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","sourcesContent":["// you have to name the file as [name].\n//the name can't be anything, the name should match the variable name given in the link in  server.\n// change this to some other name than server to see error\nimport { Box, Button, Flex, Link } from '@chakra-ui/react'\nimport { Form, Formik } from 'formik'\nimport { NextPage } from 'next'\nimport { withUrqlClient } from 'next-urql'\nimport NextLink from 'next/link'\nimport { useRouter } from 'next/router'\nimport React, { useState } from 'react'\nimport { InputField } from '../../components/inputField'\nimport { Wrapper } from '../../components/Wrapper'\nimport { useChangePasswordMutation } from '../../generated/graphql'\nimport { createUrqlClient } from '../../utils/createUrqlClient'\nimport { toErrorMap } from '../../utils/toErrorMap'\n\n//NextPage<{ token: string }>\n// this means that whatever after http://localhost:3000/change-password/ is stored in 'token' variable. the variable name is used for query\n\n// this token variable is accessed via query object in getinitialprops and passed to ({ token }) => {\n\nconst ChangePassword: NextPage /*<{ token: string }> */ = (/*{ token }*/) => {\n  const router = useRouter()\n  const [, changePassword] = useChangePasswordMutation()\n  const [tokenError, setTokenError] = useState('')\n  return (\n    <Wrapper variant=\"small\">\n      <Formik\n        initialValues={{ newPassword: '' }}\n        onSubmit={async (values, { setErrors }) => {\n          const response = await changePassword({\n            newPassword: values.newPassword,\n            token:\n              typeof router.query.token === 'string' ? router.query.token : '',\n          })\n          if (response.data?.changePassword.errors) {\n            const errorMap = toErrorMap(response.data.changePassword.errors)\n            if ('token' in errorMap) {\n              setTokenError(errorMap.token)\n            }\n            // The in operator returns true if the specified property is in the specified object\n            setErrors(errorMap)\n          } else if (response.data?.changePassword.user) {\n            // worked\n            router.push('/')\n          }\n        }}\n      >\n        {({ isSubmitting }) => (\n          <Form>\n            <InputField\n              name=\"newPassword\"\n              placeholder=\"new password\"\n              label=\"New Password\"\n              type=\"password\"\n            />\n            {tokenError ? (\n              <Flex>\n                <Box mr={2} style={{ color: 'red' }}>\n                  {tokenError}\n                </Box>\n                <NextLink href=\"/forgot-password\">\n                  <Link>click here to get a new one</Link>\n                </NextLink>\n              </Flex>\n            ) : null}\n            <Button\n              mt={4}\n              type=\"submit\"\n              colorScheme=\"teal\"\n              isLoading={isSubmitting}\n            >\n              change password\n            </Button>\n          </Form>\n        )}\n      </Formik>\n    </Wrapper>\n  )\n}\n\n// ChangePassword.getInitialProps = ({ query }) => {\n//   return {\n//     token: query.token as string,\n//   }\n// }\n\nexport default withUrqlClient(createUrqlClient, { ssr: false })(\n  ChangePassword as any\n)\n"]},"metadata":{},"sourceType":"module"}