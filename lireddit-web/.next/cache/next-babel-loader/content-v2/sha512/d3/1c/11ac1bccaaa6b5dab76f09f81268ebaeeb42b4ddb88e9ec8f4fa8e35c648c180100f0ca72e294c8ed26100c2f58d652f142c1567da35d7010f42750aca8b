{"ast":null,"code":"import _regeneratorRuntime from \"/home/shriram/Downloads/lireddit/lireddit-web/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _defineProperty from \"/home/shriram/Downloads/lireddit/lireddit-web/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"/home/shriram/Downloads/lireddit/lireddit-web/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"/home/shriram/Downloads/lireddit/lireddit-web/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectDestructuringEmpty from \"/home/shriram/Downloads/lireddit/lireddit-web/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty\";\n\nvar _jsxFileName = \"/home/shriram/Downloads/lireddit/lireddit-web/src/pages/post/edit/[id].tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { Box, Button } from '@chakra-ui/react';\nimport { Form, Formik } from 'formik';\nimport { useRouter } from 'next/router';\nimport React from 'react';\nimport { InputField } from '../../../components/inputField';\nimport { Layout } from '../../../components/Layout';\nimport { usePostQuery, useUpdatePostMutation } from '../../../generated/graphql';\nimport { useGetIntId } from '../../../utils/useGetIntId';\nimport { withApollo } from '../../../utils/withApollo';\n\nvar EditPost = function EditPost(_ref) {\n  _s();\n\n  _objectDestructuringEmpty(_ref);\n\n  var router = useRouter();\n  var intId = useGetIntId(); // return -1 if there is route is not valid string\n\n  var _usePostQuery = usePostQuery({\n    skip: intId === -1,\n    variables: {\n      id: intId\n    }\n  }),\n      data = _usePostQuery.data,\n      loading = _usePostQuery.loading;\n\n  var _useUpdatePostMutatio = useUpdatePostMutation(),\n      _useUpdatePostMutatio2 = _slicedToArray(_useUpdatePostMutatio, 1),\n      updatePost = _useUpdatePostMutatio2[0];\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Layout, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, _this);\n  }\n\n  if (!(data !== null && data !== void 0 && data.post)) {\n    return /*#__PURE__*/_jsxDEV(Layout, {\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        children: \"could not find post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, _this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    variant: \"small\",\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        title: data.post.title,\n        text: data.post.text\n      },\n      onSubmit: /*#__PURE__*/function () {\n        var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values) {\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  _context.next = 2;\n                  return updatePost({\n                    variables: _objectSpread({\n                      id: intId\n                    }, values)\n                  });\n\n                case 2:\n                  router.back(); // back to previous in stack\n\n                case 3:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        return function (_x) {\n          return _ref2.apply(this, arguments);\n        };\n      }(),\n      children: function children(_ref3) {\n        var isSubmitting = _ref3.isSubmitting;\n        return /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(InputField, {\n            name: \"title\",\n            placeholder: \"title\",\n            label: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(Box, {\n            mt: 4,\n            children: /*#__PURE__*/_jsxDEV(InputField, {\n              textarea: true,\n              name: \"text\",\n              placeholder: \"text...\",\n              label: \"Body\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(Button, {\n            mt: 4,\n            type: \"submit\",\n            colorScheme: \"teal\",\n            isLoading: isSubmitting,\n            children: \"update post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, _this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(EditPost, \"4b8WL8Qjtc7ILEQUra0fXyKwih0=\", false, function () {\n  return [useRouter, useGetIntId, usePostQuery, useUpdatePostMutation];\n});\n\n_c = EditPost;\nexport default withApollo({\n  ssr: false\n})(EditPost);\n\nvar _c;\n\n$RefreshReg$(_c, \"EditPost\");","map":{"version":3,"sources":["/home/shriram/Downloads/lireddit/lireddit-web/src/pages/post/edit/[id].tsx"],"names":["Box","Button","Form","Formik","useRouter","React","InputField","Layout","usePostQuery","useUpdatePostMutation","useGetIntId","withApollo","EditPost","router","intId","skip","variables","id","data","loading","updatePost","post","title","text","values","back","isSubmitting","ssr"],"mappings":"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","sourcesContent":["import { Box, Button } from '@chakra-ui/react'\nimport { Form, Formik } from 'formik'\nimport { useRouter } from 'next/router'\nimport React from 'react'\nimport { InputField } from '../../../components/inputField'\nimport { Layout } from '../../../components/Layout'\nimport { usePostQuery, useUpdatePostMutation } from '../../../generated/graphql'\nimport { useGetIntId } from '../../../utils/useGetIntId'\nimport { withApollo } from '../../../utils/withApollo'\n\nconst EditPost = ({}) => {\n  const router = useRouter()\n  const intId = useGetIntId()\n  // return -1 if there is route is not valid string\n  const { data, loading } = usePostQuery({\n    skip: intId === -1,\n    variables: {\n      id: intId,\n    },\n  })\n  const [updatePost] = useUpdatePostMutation()\n  if (loading) {\n    return (\n      <Layout>\n        <div>loading...</div>\n      </Layout>\n    )\n  }\n\n  if (!data?.post) {\n    return (\n      <Layout>\n        <Box>could not find post</Box>\n      </Layout>\n    )\n  }\n\n  return (\n    <Layout variant=\"small\">\n      <Formik\n        initialValues={{ title: data.post.title, text: data.post.text }}\n        onSubmit={async (values) => {\n          await updatePost({ variables: { id: intId, ...values } })\n          router.back() // back to previous in stack\n        }}\n      >\n        {({ isSubmitting }) => (\n          <Form>\n            <InputField name=\"title\" placeholder=\"title\" label=\"Title\" />\n            <Box mt={4}>\n              <InputField\n                textarea\n                name=\"text\"\n                placeholder=\"text...\"\n                label=\"Body\"\n              />\n            </Box>\n            <Button\n              mt={4}\n              type=\"submit\"\n              colorScheme=\"teal\"\n              isLoading={isSubmitting}\n            >\n              update post\n            </Button>\n          </Form>\n        )}\n      </Formik>\n    </Layout>\n  )\n}\n\nexport default withApollo({ ssr: false })(EditPost)\n"]},"metadata":{},"sourceType":"module"}