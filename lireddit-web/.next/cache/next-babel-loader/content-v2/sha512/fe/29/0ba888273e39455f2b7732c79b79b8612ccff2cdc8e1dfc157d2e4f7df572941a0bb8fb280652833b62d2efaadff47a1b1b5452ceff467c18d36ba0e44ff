{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/shriram/Downloads/lireddit/lireddit-web/src/pages/index.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { Box, Button, Flex, Heading, Link, Stack, Text } from '@chakra-ui/react';\nimport NextLink from 'next/link';\nimport React from 'react';\nimport { EditDeletePostButtons } from '../components/EditDeletePostButtons';\nimport { Layout } from '../components/Layout';\nimport { UpdootSection } from '../components/updootSection';\nimport { usePostsQuery } from '../generated/graphql';\nimport { withApollo } from '../utils/withApollo';\n\nvar Index = function Index() {\n  _s();\n\n  var _usePostsQuery = usePostsQuery({\n    variables: {\n      limit: 15,\n      cursor: null\n    },\n    notifyOnNetworkStatusChange: true //Enabling this option will also ensure that the value of loading updates accordingly\n\n  }),\n      data = _usePostsQuery.data,\n      loading = _usePostsQuery.loading,\n      fetchMore = _usePostsQuery.fetchMore,\n      variables = _usePostsQuery.variables; // variables is a in=build query method\n\n\n  if (!loading && !data) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \" you got query failed for some reason\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 12\n    }, _this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [!data && loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, _this) : /*#__PURE__*/_jsxDEV(Stack, {\n      spacing: 8,\n      children: data.posts.posts.map(function (p) {\n        return (// IMPORTANT: CAN'T READ PROPERTY 'ID' OF NULL if the ternary is removed. p.id,if p is null we do null.id\n          !p ? null : /*#__PURE__*/_jsxDEV(Flex, {\n            p: 5,\n            shadow: \"md\",\n            borderWidth: \"1px\",\n            children: [/*#__PURE__*/_jsxDEV(UpdootSection, {\n              post: p\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 17\n            }, _this), /*#__PURE__*/_jsxDEV(Box, {\n              flex: 1,\n              children: [/*#__PURE__*/_jsxDEV(NextLink, {\n                href: \"/post/[id]\",\n                as: \"/post/\".concat(p.id),\n                children: /*#__PURE__*/_jsxDEV(Link, {\n                  children: /*#__PURE__*/_jsxDEV(Heading, {\n                    fontSize: \"xl\",\n                    children: p.title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 38,\n                    columnNumber: 23\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 37,\n                  columnNumber: 21\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 19\n              }, _this), /*#__PURE__*/_jsxDEV(Text, {\n                children: [\"posted by \", p.creator.username]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 19\n              }, _this), /*#__PURE__*/_jsxDEV(Flex, {\n                children: [/*#__PURE__*/_jsxDEV(Text, {\n                  flex: 1,\n                  mt: 4,\n                  children: p.textSnippet\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 43,\n                  columnNumber: 21\n                }, _this), /*#__PURE__*/_jsxDEV(Box, {\n                  ml: \"auto\",\n                  children: /*#__PURE__*/_jsxDEV(EditDeletePostButtons, {\n                    id: p.id,\n                    creatorId: p.creator.id\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 47,\n                    columnNumber: 23\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 46,\n                  columnNumber: 21\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 19\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 17\n            }, _this)]\n          }, p.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 15\n          }, _this)\n        );\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, _this), data && data.posts.hasMore ? /*#__PURE__*/_jsxDEV(Flex, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: function onClick() {\n          fetchMore({\n            variables: {\n              limit: variables === null || variables === void 0 ? void 0 : variables.limit,\n              cursor: data.posts.posts[data.posts.posts.length - 1].createdAt\n            } // updateQuery: (\n            //   previousValue,\n            //   { fetchMoreResult }\n            // ): PostsQuery => {\n            //   if (!fetchMoreResult) {\n            //     return previousValue as PostsQuery\n            //   }\n            //   return {\n            //     __typename: 'Query',\n            //     posts: {\n            //       __typename: 'PaginatedPosts',\n            //       hasMore: (fetchMoreResult as PostsQuery).posts.hasMore,\n            //       posts: [\n            //         ...(previousValue as PostsQuery).posts.posts,\n            //         ...(fetchMoreResult as PostsQuery).posts.posts,\n            //       ],\n            //     },\n            //   }\n            // },\n\n          });\n        },\n        isLoading: loading,\n        m: \"auto\",\n        my: 8,\n        children: \"load more\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, _this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Index, \"IzduA9gqBJwCq4mMaAylD0W8H0E=\", false, function () {\n  return [usePostsQuery];\n});\n\n_c = Index;\nexport default withApollo({\n  ssr: true\n})(Index);\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["/home/shriram/Downloads/lireddit/lireddit-web/src/pages/index.tsx"],"names":["Box","Button","Flex","Heading","Link","Stack","Text","NextLink","React","EditDeletePostButtons","Layout","UpdootSection","usePostsQuery","withApollo","Index","variables","limit","cursor","notifyOnNetworkStatusChange","data","loading","fetchMore","posts","map","p","id","title","creator","username","textSnippet","hasMore","length","createdAt","ssr"],"mappings":"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","sourcesContent":["import { Box, Button, Flex, Heading, Link, Stack, Text } from '@chakra-ui/react'\nimport NextLink from 'next/link'\nimport React from 'react'\nimport { EditDeletePostButtons } from '../components/EditDeletePostButtons'\nimport { Layout } from '../components/Layout'\nimport { UpdootSection } from '../components/updootSection'\nimport { usePostsQuery } from '../generated/graphql'\nimport { withApollo } from '../utils/withApollo'\n\nconst Index = () => {\n  const { data, loading, fetchMore, variables } = usePostsQuery({\n    variables: {\n      limit: 15,\n      cursor: null as null | string,\n    },\n    notifyOnNetworkStatusChange: true, //Enabling this option will also ensure that the value of loading updates accordingly\n  })\n  // variables is a in=build query method\n  if (!loading && !data) {\n    return <div> you got query failed for some reason</div>\n  }\n  return (\n    <Layout>\n      {!data && loading ? (\n        <div>loading</div>\n      ) : (\n        <Stack spacing={8}>\n          {data!.posts.posts.map((p) =>\n            // IMPORTANT: CAN'T READ PROPERTY 'ID' OF NULL if the ternary is removed. p.id,if p is null we do null.id\n            !p ? null : (\n              <Flex key={p.id} p={5} shadow=\"md\" borderWidth=\"1px\">\n                <UpdootSection post={p} />\n\n                <Box flex={1}>\n                  <NextLink href=\"/post/[id]\" as={`/post/${p.id}`}>\n                    {/* href=\"url in next js server\" as=\"real url\" */}\n                    <Link>\n                      <Heading fontSize=\"xl\">{p.title}</Heading>\n                    </Link>\n                  </NextLink>\n                  <Text>posted by {p.creator.username}</Text>\n                  <Flex>\n                    <Text flex={1} mt={4}>\n                      {p.textSnippet}\n                    </Text>\n                    <Box ml=\"auto\">\n                      <EditDeletePostButtons\n                        id={p.id}\n                        creatorId={p.creator.id}\n                      />\n                    </Box>\n                  </Flex>\n                </Box>\n              </Flex>\n            )\n          )}\n        </Stack>\n      )}\n      {data && data.posts.hasMore ? (\n        <Flex>\n          <Button\n            onClick={() => {\n              fetchMore({\n                variables: {\n                  limit: variables?.limit,\n                  cursor:\n                    data.posts.posts[data.posts.posts.length - 1].createdAt,\n                },\n                // updateQuery: (\n                //   previousValue,\n                //   { fetchMoreResult }\n                // ): PostsQuery => {\n                //   if (!fetchMoreResult) {\n                //     return previousValue as PostsQuery\n                //   }\n                //   return {\n                //     __typename: 'Query',\n                //     posts: {\n                //       __typename: 'PaginatedPosts',\n                //       hasMore: (fetchMoreResult as PostsQuery).posts.hasMore,\n                //       posts: [\n                //         ...(previousValue as PostsQuery).posts.posts,\n                //         ...(fetchMoreResult as PostsQuery).posts.posts,\n                //       ],\n                //     },\n                //   }\n                // },\n              })\n            }}\n            isLoading={loading}\n            m=\"auto\"\n            my={8}\n          >\n            load more\n          </Button>\n        </Flex>\n      ) : null}\n    </Layout>\n  )\n}\nexport default withApollo({ ssr: true })(Index)\n"]},"metadata":{},"sourceType":"module"}