{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useRouter } from 'next/router';\nexport var useGetIntId = function useGetIntId() {\n  _s();\n\n  var router = useRouter();\n  var intId = typeof router.query.id === 'string' ? parseInt(router.query.id) : -1;\n  return intId;\n};\n\n_s(useGetIntId, \"fN7XvhJ+p5oE6+Xlo0NJmXpxjC8=\", false, function () {\n  return [useRouter];\n});","map":{"version":3,"sources":["/home/shriram/Downloads/lireddit/lireddit-web/src/utils/useGetIntId.ts"],"names":["useRouter","useGetIntId","router","intId","query","id","parseInt"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,aAA1B;AAEA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AAAA;;AAC/B,MAAMC,MAAM,GAAGF,SAAS,EAAxB;AACA,MAAMG,KAAK,GACT,OAAOD,MAAM,CAACE,KAAP,CAAaC,EAApB,KAA2B,QAA3B,GAAsCC,QAAQ,CAACJ,MAAM,CAACE,KAAP,CAAaC,EAAd,CAA9C,GAAkE,CAAC,CADrE;AAGA,SAAOF,KAAP;AACD,CANM;;GAAMF,W;UACID,S","sourcesContent":["import { useRouter } from 'next/router'\n\nexport const useGetIntId = () => {\n  const router = useRouter()\n  const intId =\n    typeof router.query.id === 'string' ? parseInt(router.query.id) : -1\n\n  return intId\n}\n"]},"metadata":{},"sourceType":"module"}