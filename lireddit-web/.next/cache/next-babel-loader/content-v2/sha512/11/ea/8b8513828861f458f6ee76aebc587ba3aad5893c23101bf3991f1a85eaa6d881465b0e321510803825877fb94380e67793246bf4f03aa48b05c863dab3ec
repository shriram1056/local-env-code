{"ast":null,"code":"export var toErrorMap = function toErrorMap(errors) {\n  var errorMap = {};\n  errors.forEach(function (_ref) {\n    var field = _ref.field,\n        message = _ref.message;\n    errorMap.field = message;\n  });\n  return errorMap;\n}; // the FieldError is a array so we convert it to object here\n//A Record<K, T> is an object type whose property keys are K and whose property values are T.","map":{"version":3,"sources":["/home/shriram/Downloads/lireddit/lireddit-web/src/utils/toErrorMap.ts"],"names":["toErrorMap","errors","errorMap","forEach","field","message"],"mappings":"AAEA,OAAO,IAAMA,UAAU,GAAG,SAAbA,UAAa,CAACC,MAAD,EAA0B;AAClD,MAAMC,QAAgC,GAAG,EAAzC;AACAD,EAAAA,MAAM,CAACE,OAAP,CAAe,gBAAwB;AAAA,QAArBC,KAAqB,QAArBA,KAAqB;AAAA,QAAdC,OAAc,QAAdA,OAAc;AACrCH,IAAAA,QAAQ,CAACE,KAAT,GAAiBC,OAAjB;AACD,GAFD;AAIA,SAAOH,QAAP;AACD,CAPM,C,CAQP;AAEA","sourcesContent":["import { FieldError } from '../generated/graphql'\n\nexport const toErrorMap = (errors: FieldError[]) => {\n  const errorMap: Record<string, string> = {}\n  errors.forEach(({ field, message }) => {\n    errorMap.field = message\n  })\n\n  return errorMap\n}\n// the FieldError is a array so we convert it to object here\n\n//A Record<K, T> is an object type whose property keys are K and whose property values are T.\n"]},"metadata":{},"sourceType":"module"}