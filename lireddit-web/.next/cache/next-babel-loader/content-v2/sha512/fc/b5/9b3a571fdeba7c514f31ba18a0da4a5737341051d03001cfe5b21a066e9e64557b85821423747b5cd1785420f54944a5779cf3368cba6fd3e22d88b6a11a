{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"/home/shriram/Downloads/lireddit/lireddit-web/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/home/shriram/Downloads/lireddit/lireddit-web/src/pages/index.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { Box, Button, Flex, Heading, Link, Stack, Text } from '@chakra-ui/react';\nimport { withUrqlClient } from 'next-urql';\nimport NextLink from 'next/link';\nimport React from 'react';\nimport { Layout } from '../components/Layout';\nimport { usePostsQuery } from '../generated/graphql';\nimport { createUrqlClient } from '../utils/createUrqlClient';\n\nvar Index = function Index() {\n  _s();\n\n  var _usePostsQuery = usePostsQuery({\n    variables: {\n      limit: 10\n    }\n  }),\n      _usePostsQuery2 = _slicedToArray(_usePostsQuery, 1),\n      _usePostsQuery2$ = _usePostsQuery2[0],\n      data = _usePostsQuery2$.data,\n      fetching = _usePostsQuery2$.fetching;\n\n  if (!fetching && !data) {}\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [/*#__PURE__*/_jsxDEV(Flex, {\n      align: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        children: \"LiReddit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(NextLink, {\n        href: \"/create-post\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          ml: \"auto\",\n          children: \"create post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, _this), !data ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, _this) : /*#__PURE__*/_jsxDEV(Stack, {\n      spacing: 8,\n      children: data.posts.map(function (p) {\n        return /*#__PURE__*/_jsxDEV(Box, {\n          p: 5,\n          shadow: \"md\",\n          borderWidtth: \"1px\",\n          children: [/*#__PURE__*/_jsxDEV(Heading, {\n            fontSize: \"xl\",\n            children: p.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(Text, {\n            mt: 4,\n            children: p.textSnippet\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 15\n          }, _this)]\n        }, p.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, _this), data ? /*#__PURE__*/_jsxDEV(Flex, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        m: \"auto\",\n        my: 8,\n        children: \"load more\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, _this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Index, \"OPKuOwJzmPoQUPvR2HBNxOhgzxc=\", false, function () {\n  return [usePostsQuery];\n});\n\n_c = Index;\nexport default withUrqlClient(createUrqlClient, {\n  ssr: true\n})(Index);\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["/home/shriram/Downloads/lireddit/lireddit-web/src/pages/index.tsx"],"names":["Box","Button","Flex","Heading","Link","Stack","Text","withUrqlClient","NextLink","React","Layout","usePostsQuery","createUrqlClient","Index","variables","limit","data","fetching","posts","map","p","title","textSnippet","id","ssr"],"mappings":";;;;;;;AAAA,SAASA,GAAT,EAAcC,MAAd,EAAsBC,IAAtB,EAA4BC,OAA5B,EAAqCC,IAArC,EAA2CC,KAA3C,EAAkDC,IAAlD,QAA8D,kBAA9D;AACA,SAASC,cAAT,QAA+B,WAA/B;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,sBAAvB;AACA,SAASC,aAAT,QAA8B,sBAA9B;AACA,SAASC,gBAAT,QAAiC,2BAAjC;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,GAAM;AAAA;;AAAA,uBACWF,aAAa,CAAC;AACzCG,IAAAA,SAAS,EAAE;AACTC,MAAAA,KAAK,EAAE;AADE;AAD8B,GAAD,CADxB;AAAA;AAAA;AAAA,MACTC,IADS,oBACTA,IADS;AAAA,MACHC,QADG,oBACHA,QADG;;AAMlB,MAAI,CAACA,QAAD,IAAa,CAACD,IAAlB,EAAwB,CACvB;;AACD,sBACE,QAAC,MAAD;AAAA,4BACE,QAAC,IAAD;AAAM,MAAA,KAAK,EAAC,QAAZ;AAAA,8BACE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAEE,QAAC,QAAD;AAAU,QAAA,IAAI,EAAC,cAAf;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,EAAE,EAAC,MAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,eAFF;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAOG,CAACA,IAAD,gBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADD,gBAGC,QAAC,KAAD;AAAO,MAAA,OAAO,EAAE,CAAhB;AAAA,gBACGA,IAAI,CAACE,KAAL,CAAWC,GAAX,CAAe,UAACC,CAAD;AAAA,4BACd,QAAC,GAAD;AAAgB,UAAA,CAAC,EAAE,CAAnB;AAAsB,UAAA,MAAM,EAAC,IAA7B;AAAkC,UAAA,YAAY,EAAC,KAA/C;AAAA,kCACE,QAAC,OAAD;AAAS,YAAA,QAAQ,EAAC,IAAlB;AAAA,sBAAwBA,CAAC,CAACC;AAA1B;AAAA;AAAA;AAAA;AAAA,mBADF,eAEE,QAAC,IAAD;AAAM,YAAA,EAAE,EAAE,CAAV;AAAA,sBAAcD,CAAC,CAACE;AAAhB;AAAA;AAAA;AAAA;AAAA,mBAFF;AAAA,WAAUF,CAAC,CAACG,EAAZ;AAAA;AAAA;AAAA;AAAA,iBADc;AAAA,OAAf;AADH;AAAA;AAAA;AAAA;AAAA,aAVJ,EAmBGP,IAAI,gBACH,QAAC,IAAD;AAAA,6BACE,QAAC,MAAD;AAAQ,QAAA,CAAC,EAAC,MAAV;AAAiB,QAAA,EAAE,EAAE,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,aADG,GAMD,IAzBN;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AA6BD,CArCD;;GAAMH,K;UACyBF,a;;;KADzBE,K;AAsCN,eAAeN,cAAc,CAACK,gBAAD,EAAmB;AAAEY,EAAAA,GAAG,EAAE;AAAP,CAAnB,CAAd,CAAgDX,KAAhD,CAAf","sourcesContent":["import { Box, Button, Flex, Heading, Link, Stack, Text } from '@chakra-ui/react'\nimport { withUrqlClient } from 'next-urql'\nimport NextLink from 'next/link'\nimport React from 'react'\nimport { Layout } from '../components/Layout'\nimport { usePostsQuery } from '../generated/graphql'\nimport { createUrqlClient } from '../utils/createUrqlClient'\n\nconst Index = () => {\n  const [{ data, fetching }] = usePostsQuery({\n    variables: {\n      limit: 10,\n    },\n  })\n  if (!fetching && !data) {\n  }\n  return (\n    <Layout>\n      <Flex align=\"center\">\n        <Heading>LiReddit</Heading>\n        <NextLink href=\"/create-post\">\n          <Link ml=\"auto\">create post</Link>\n        </NextLink>\n      </Flex>\n      {!data ? (\n        <div>loading</div>\n      ) : (\n        <Stack spacing={8}>\n          {data.posts.map((p) => (\n            <Box key={p.id} p={5} shadow=\"md\" borderWidtth=\"1px\">\n              <Heading fontSize=\"xl\">{p.title}</Heading>\n              <Text mt={4}>{p.textSnippet}</Text>\n            </Box>\n          ))}\n        </Stack>\n      )}\n      {data ? (\n        <Flex>\n          <Button m=\"auto\" my={8}>\n            load more\n          </Button>\n        </Flex>\n      ) : null}\n    </Layout>\n  )\n}\nexport default withUrqlClient(createUrqlClient, { ssr: true })(Index)\n"]},"metadata":{},"sourceType":"module"}