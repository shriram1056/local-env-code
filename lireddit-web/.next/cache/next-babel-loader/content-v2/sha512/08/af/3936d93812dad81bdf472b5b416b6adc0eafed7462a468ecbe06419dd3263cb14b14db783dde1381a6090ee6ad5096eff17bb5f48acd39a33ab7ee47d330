{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"/home/shriram/Downloads/lireddit/lireddit-web/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/shriram/Downloads/lireddit/lireddit-web/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/shriram/Downloads/lireddit/lireddit-web/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/home/shriram/Downloads/lireddit/lireddit-web/src/components/updootSection.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { ChevronDownIcon, ChevronUpIcon } from '@chakra-ui/icons';\nimport { Flex, IconButton } from '@chakra-ui/react';\nimport React, { useState } from 'react';\nimport { useVoteMutation } from '../generated/graphql';\nexport var UpdootSection = function UpdootSection(_ref) {\n  _s();\n\n  var post = _ref.post;\n\n  var _useState = useState('not-loading'),\n      loadingState = _useState[0],\n      setLoadingState = _useState[1]; // there are 3 types in this\n\n\n  var _useVoteMutation = useVoteMutation(),\n      _useVoteMutation2 = _slicedToArray(_useVoteMutation, 2),\n      vote = _useVoteMutation2[1];\n\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    direction: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    mr: 4,\n    children: [/*#__PURE__*/_jsxDEV(IconButton, {\n      onClick: /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                setLoadingState('updoot-loading');\n                _context.next = 3;\n                return vote({\n                  postid: post.id,\n                  value: 1\n                });\n\n              case 3:\n                setLoadingState('not-loading');\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      })),\n      isLoading: loadingState === 'updoot-loading',\n      \"aria-label\": \"updoot post\",\n      icon: /*#__PURE__*/_jsxDEV(ChevronUpIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 15\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, _this), post.points, /*#__PURE__*/_jsxDEV(IconButton, {\n      onClick: /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                setLoadingState('downdoot-loading');\n                _context2.next = 3;\n                return vote({\n                  postid: post.id,\n                  value: -1\n                });\n\n              case 3:\n                setLoadingState('not-loading');\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      })),\n      isLoading: loadingState === 'downdoot-loading',\n      \"aria-label\": \"downdoot post\",\n      icon: /*#__PURE__*/_jsxDEV(ChevronDownIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 15\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(UpdootSection, \"wgtWBzTj8vC0Cw4gEsSFxJOywEE=\", false, function () {\n  return [useVoteMutation];\n});\n\n_c = UpdootSection;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdootSection\");","map":{"version":3,"sources":["/home/shriram/Downloads/lireddit/lireddit-web/src/components/updootSection.tsx"],"names":["ChevronDownIcon","ChevronUpIcon","Flex","IconButton","React","useState","useVoteMutation","UpdootSection","post","loadingState","setLoadingState","vote","postid","id","value","points"],"mappings":";;;;;;;;;AAAA,SAASA,eAAT,EAA0BC,aAA1B,QAA+C,kBAA/C;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,kBAAjC;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAAqBC,eAArB,QAA4C,sBAA5C;AAMA,OAAO,IAAMC,aAA2C,GAAG,SAA9CA,aAA8C,OAAc;AAAA;;AAAA,MAAXC,IAAW,QAAXA,IAAW;;AAAA,kBAC/BH,QAAQ,CAE9C,aAF8C,CADuB;AAAA,MAChEI,YADgE;AAAA,MAClDC,eADkD,iBAGtD;;;AAHsD,yBAItDJ,eAAe,EAJuC;AAAA;AAAA,MAI9DK,IAJ8D;;AAKvE,sBACE,QAAC,IAAD;AAAM,IAAA,SAAS,EAAC,QAAhB;AAAyB,IAAA,cAAc,EAAC,QAAxC;AAAiD,IAAA,UAAU,EAAC,QAA5D;AAAqE,IAAA,EAAE,EAAE,CAAzE;AAAA,4BACE,QAAC,UAAD;AACE,MAAA,OAAO,wEAAE;AAAA;AAAA;AAAA;AAAA;AACPD,gBAAAA,eAAe,CAAC,gBAAD,CAAf;AADO;AAAA,uBAEDC,IAAI,CAAC;AACTC,kBAAAA,MAAM,EAAEJ,IAAI,CAACK,EADJ;AAETC,kBAAAA,KAAK,EAAE;AAFE,iBAAD,CAFH;;AAAA;AAMPJ,gBAAAA,eAAe,CAAC,aAAD,CAAf;;AANO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAF,EADT;AASE,MAAA,SAAS,EAAED,YAAY,KAAK,gBAT9B;AAUE,oBAAW,aAVb;AAWE,MAAA,IAAI,eAAE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAXR;AAAA;AAAA;AAAA;AAAA,aADF,EAcGD,IAAI,CAACO,MAdR,eAeE,QAAC,UAAD;AACE,MAAA,OAAO,wEAAE;AAAA;AAAA;AAAA;AAAA;AACPL,gBAAAA,eAAe,CAAC,kBAAD,CAAf;AADO;AAAA,uBAEDC,IAAI,CAAC;AACTC,kBAAAA,MAAM,EAAEJ,IAAI,CAACK,EADJ;AAETC,kBAAAA,KAAK,EAAE,CAAC;AAFC,iBAAD,CAFH;;AAAA;AAMPJ,gBAAAA,eAAe,CAAC,aAAD,CAAf;;AANO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAF,EADT;AASE,MAAA,SAAS,EAAED,YAAY,KAAK,kBAT9B;AAUE,oBAAW,eAVb;AAWE,MAAA,IAAI,eAAE,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAXR;AAAA;AAAA;AAAA;AAAA,aAfF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AA+BD,CApCM;;GAAMF,a;UAIMD,e;;;KAJNC,a","sourcesContent":["import { ChevronDownIcon, ChevronUpIcon } from '@chakra-ui/icons'\nimport { Flex, IconButton } from '@chakra-ui/react'\nimport React, { useState } from 'react'\nimport { PostsQuery, useVoteMutation } from '../generated/graphql'\n\ninterface UpdootSectionProps {\n  post: PostsQuery['posts']['posts'][0]\n}\n\nexport const UpdootSection: React.FC<UpdootSectionProps> = ({ post }) => {\n  const [loadingState, setLoadingState] = useState<\n    'updoot-loading' | 'downdoot-loading' | 'not-loading'\n  >('not-loading') // there are 3 types in this\n  const [, vote] = useVoteMutation()\n  return (\n    <Flex direction=\"column\" justifyContent=\"center\" alignItems=\"center\" mr={4}>\n      <IconButton\n        onClick={async () => {\n          setLoadingState('updoot-loading')\n          await vote({\n            postid: post.id,\n            value: 1,\n          })\n          setLoadingState('not-loading')\n        }}\n        isLoading={loadingState === 'updoot-loading'}\n        aria-label=\"updoot post\"\n        icon={<ChevronUpIcon />}\n      />\n      {post.points}\n      <IconButton\n        onClick={async () => {\n          setLoadingState('downdoot-loading')\n          await vote({\n            postid: post.id,\n            value: -1,\n          })\n          setLoadingState('not-loading')\n        }}\n        isLoading={loadingState === 'downdoot-loading'}\n        aria-label=\"downdoot post\"\n        icon={<ChevronDownIcon />}\n      />\n    </Flex>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}