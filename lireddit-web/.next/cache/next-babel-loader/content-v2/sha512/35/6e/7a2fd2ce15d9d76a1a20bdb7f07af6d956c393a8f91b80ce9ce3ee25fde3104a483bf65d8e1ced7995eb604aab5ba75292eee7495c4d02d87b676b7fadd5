{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/shriram/Downloads/lireddit/lireddit-web/src/components/updootSection.tsx\";\nimport { ChevronDownIcon, ChevronUpIcon } from '@chakra-ui/icons';\nimport { Flex, IconButton } from '@chakra-ui/react';\nimport React, { useState } from 'react';\nimport { useVoteMutation } from '../generated/graphql';\n// this props is passed in index\nexport const UpdootSection = ({\n  post\n}) => {\n  const {\n    0: loadingState,\n    1: setLoadingState\n  } = useState('not-loading'); // there are 3 types in this\n\n  const [vote] = useVoteMutation();\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    direction: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    mr: 4,\n    children: [/*#__PURE__*/_jsxDEV(IconButton, {\n      onClick: async () => {\n        if (post.voteStatus === 1) {\n          return;\n        }\n\n        setLoadingState('updoot-loading');\n        await vote({\n          variables: {\n            postid: post.id,\n            value: 1\n          }\n        });\n        setLoadingState('not-loading');\n      },\n      colorScheme: post.voteStatus === 1 ? 'green' : undefined,\n      isLoading: loadingState === 'updoot-loading' // loading state made by user\n      ,\n      \"aria-label\": \"updoot post\",\n      icon: /*#__PURE__*/_jsxDEV(ChevronUpIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), post.points, /*#__PURE__*/_jsxDEV(IconButton, {\n      onClick: async () => {\n        if (post.voteStatus === -1) {\n          return;\n        }\n\n        setLoadingState('downdoot-loading');\n        await vote({\n          variables: {\n            postid: post.id,\n            value: -1\n          }\n        });\n        setLoadingState('not-loading');\n      },\n      colorScheme: post.voteStatus === -1 ? 'red' : undefined,\n      isLoading: loadingState === 'downdoot-loading',\n      \"aria-label\": \"downdoot post\",\n      icon: /*#__PURE__*/_jsxDEV(ChevronDownIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};","map":{"version":3,"sources":["/home/shriram/Downloads/lireddit/lireddit-web/src/components/updootSection.tsx"],"names":["ChevronDownIcon","ChevronUpIcon","Flex","IconButton","React","useState","useVoteMutation","UpdootSection","post","loadingState","setLoadingState","vote","voteStatus","variables","postid","id","value","undefined","points"],"mappings":";;AAAA,SAASA,eAAT,EAA0BC,aAA1B,QAA+C,kBAA/C;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,kBAAjC;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAAqBC,eAArB,QAA4C,sBAA5C;AAKA;AAEA,OAAO,MAAMC,aAA2C,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AACvE,QAAM;AAAA,OAACC,YAAD;AAAA,OAAeC;AAAf,MAAkCL,QAAQ,CAE9C,aAF8C,CAAhD,CADuE,CAGtD;;AACjB,QAAM,CAACM,IAAD,IAASL,eAAe,EAA9B;AACA,sBACE,QAAC,IAAD;AAAM,IAAA,SAAS,EAAC,QAAhB;AAAyB,IAAA,cAAc,EAAC,QAAxC;AAAiD,IAAA,UAAU,EAAC,QAA5D;AAAqE,IAAA,EAAE,EAAE,CAAzE;AAAA,4BACE,QAAC,UAAD;AACE,MAAA,OAAO,EAAE,YAAY;AACnB,YAAIE,IAAI,CAACI,UAAL,KAAoB,CAAxB,EAA2B;AACzB;AACD;;AACDF,QAAAA,eAAe,CAAC,gBAAD,CAAf;AACA,cAAMC,IAAI,CAAC;AACTE,UAAAA,SAAS,EAAE;AACTC,YAAAA,MAAM,EAAEN,IAAI,CAACO,EADJ;AAETC,YAAAA,KAAK,EAAE;AAFE;AADF,SAAD,CAAV;AAMAN,QAAAA,eAAe,CAAC,aAAD,CAAf;AACD,OAbH;AAcE,MAAA,WAAW,EAAEF,IAAI,CAACI,UAAL,KAAoB,CAApB,GAAwB,OAAxB,GAAkCK,SAdjD;AAeE,MAAA,SAAS,EAAER,YAAY,KAAK,gBAf9B,CAegD;AAfhD;AAgBE,oBAAW,aAhBb;AAiBE,MAAA,IAAI,eAAE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAjBR;AAAA;AAAA;AAAA;AAAA,YADF,EAoBGD,IAAI,CAACU,MApBR,eAqBE,QAAC,UAAD;AACE,MAAA,OAAO,EAAE,YAAY;AACnB,YAAIV,IAAI,CAACI,UAAL,KAAoB,CAAC,CAAzB,EAA4B;AAC1B;AACD;;AACDF,QAAAA,eAAe,CAAC,kBAAD,CAAf;AACA,cAAMC,IAAI,CAAC;AACTE,UAAAA,SAAS,EAAE;AACTC,YAAAA,MAAM,EAAEN,IAAI,CAACO,EADJ;AAETC,YAAAA,KAAK,EAAE,CAAC;AAFC;AADF,SAAD,CAAV;AAMAN,QAAAA,eAAe,CAAC,aAAD,CAAf;AACD,OAbH;AAcE,MAAA,WAAW,EAAEF,IAAI,CAACI,UAAL,KAAoB,CAAC,CAArB,GAAyB,KAAzB,GAAiCK,SAdhD;AAeE,MAAA,SAAS,EAAER,YAAY,KAAK,kBAf9B;AAgBE,oBAAW,eAhBb;AAiBE,MAAA,IAAI,eAAE,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAjBR;AAAA;AAAA;AAAA;AAAA,YArBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2CD,CAhDM","sourcesContent":["import { ChevronDownIcon, ChevronUpIcon } from '@chakra-ui/icons'\nimport { Flex, IconButton } from '@chakra-ui/react'\nimport React, { useState } from 'react'\nimport { PostsQuery, useVoteMutation } from '../generated/graphql'\n\ninterface UpdootSectionProps {\n  post: PostsQuery['posts']['posts'][0]\n}\n// this props is passed in index\n\nexport const UpdootSection: React.FC<UpdootSectionProps> = ({ post }) => {\n  const [loadingState, setLoadingState] = useState<\n    'updoot-loading' | 'downdoot-loading' | 'not-loading'\n  >('not-loading') // there are 3 types in this\n  const [vote] = useVoteMutation()\n  return (\n    <Flex direction=\"column\" justifyContent=\"center\" alignItems=\"center\" mr={4}>\n      <IconButton\n        onClick={async () => {\n          if (post.voteStatus === 1) {\n            return\n          }\n          setLoadingState('updoot-loading')\n          await vote({\n            variables: {\n              postid: post.id,\n              value: 1,\n            },\n          })\n          setLoadingState('not-loading')\n        }}\n        colorScheme={post.voteStatus === 1 ? 'green' : undefined}\n        isLoading={loadingState === 'updoot-loading'} // loading state made by user\n        aria-label=\"updoot post\"\n        icon={<ChevronUpIcon />}\n      />\n      {post.points}\n      <IconButton\n        onClick={async () => {\n          if (post.voteStatus === -1) {\n            return\n          }\n          setLoadingState('downdoot-loading')\n          await vote({\n            variables: {\n              postid: post.id,\n              value: -1,\n            },\n          })\n          setLoadingState('not-loading')\n        }}\n        colorScheme={post.voteStatus === -1 ? 'red' : undefined}\n        isLoading={loadingState === 'downdoot-loading'}\n        aria-label=\"downdoot post\"\n        icon={<ChevronDownIcon />}\n      />\n    </Flex>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}