{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/shriram/Downloads/lireddit/lireddit-web/src/pages/register.tsx\";\nimport { Box, Button, Flex, Link } from '@chakra-ui/react';\nimport { Form, Formik } from 'formik';\nimport NextLink from 'next/link';\nimport { useRouter } from 'next/router';\nimport React from 'react';\nimport { InputField } from '../components/inputField';\nimport { Wrapper } from '../components/Wrapper';\nimport { MeDocument, useRegisterMutation } from '../generated/graphql';\nimport { toErrorMap } from '../utils/toErrorMap';\nimport { withApollo } from '../utils/withApollo';\n\nconst Register = ({}) => {\n  const router = useRouter();\n  const [register] = useRegisterMutation();\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    variant: \"small\",\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        email: '',\n        username: '',\n        password: ''\n      },\n      onSubmit: async (values, {\n        setErrors\n      }) => {\n        var _response$data, _response$data2;\n\n        const response = await register({\n          variables: {\n            options: values\n          },\n          update: (cache, {\n            data\n          }) => {\n            cache.writeQuery({\n              query: MeDocument,\n              data: {\n                __typename: 'Query',\n                me: data === null || data === void 0 ? void 0 : data.register.user\n              }\n            });\n            cache.evict({\n              fieldName: 'posts:{}'\n            });\n          }\n        }); // this return a promise needed to stop the spinner or isSubmitting\n\n        if ((_response$data = response.data) !== null && _response$data !== void 0 && _response$data.register.errors) {\n          console.log(toErrorMap(response.data.register.errors));\n          setErrors(toErrorMap(response.data.register.errors)); // set errors shows error below input field. to show error below particular field we say {username: \"too small\"}\n        } else if ((_response$data2 = response.data) !== null && _response$data2 !== void 0 && _response$data2.register.user) {\n          // worked\n          router.push('/');\n        }\n      },\n      children: ({\n        isSubmitting\n      }) => /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(InputField, {\n          name: \"username\",\n          placeholder: \"username\",\n          label: \"username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          mt: 4,\n          children: /*#__PURE__*/_jsxDEV(InputField, {\n            name: \"email\",\n            placeholder: \"email\",\n            label: \"email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          mt: 4,\n          children: /*#__PURE__*/_jsxDEV(InputField, {\n            name: \"password\",\n            placeholder: \"password\",\n            label: \"password\",\n            type: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Flex, {\n          mt: 2,\n          children: /*#__PURE__*/_jsxDEV(NextLink, {\n            href: \"/forgot-password\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              ml: \"auto\",\n              children: \"forgot password?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          mt: 4,\n          type: \"submit\",\n          colorScheme: \"teal\",\n          isLoading: isSubmitting,\n          children: \"register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n\nexport default withApollo({\n  ssr: false\n})(Register);","map":{"version":3,"sources":["/home/shriram/Downloads/lireddit/lireddit-web/src/pages/register.tsx"],"names":["Box","Button","Flex","Link","Form","Formik","NextLink","useRouter","React","InputField","Wrapper","MeDocument","useRegisterMutation","toErrorMap","withApollo","Register","router","register","email","username","password","values","setErrors","response","variables","options","update","cache","data","writeQuery","query","__typename","me","user","evict","fieldName","errors","console","log","push","isSubmitting","ssr"],"mappings":"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","sourcesContent":["import { Box, Button, Flex, Link } from '@chakra-ui/react'\nimport { Form, Formik } from 'formik'\nimport NextLink from 'next/link'\nimport { useRouter } from 'next/router'\nimport React from 'react'\nimport { InputField } from '../components/inputField'\nimport { Wrapper } from '../components/Wrapper'\nimport { MeDocument, MeQuery, useRegisterMutation } from '../generated/graphql'\nimport { toErrorMap } from '../utils/toErrorMap'\nimport { withApollo } from '../utils/withApollo'\n\ninterface registerProps {}\n\nconst Register: React.FC<registerProps> = ({}) => {\n  const router = useRouter()\n  const [register] = useRegisterMutation()\n\n  return (\n    <Wrapper variant=\"small\">\n      <Formik\n        initialValues={{ email: '', username: '', password: '' }}\n        onSubmit={async (values, { setErrors }) => {\n          const response = await register({\n            variables: { options: values },\n            update: (cache, { data }) => {\n              cache.writeQuery<MeQuery>({\n                query: MeDocument,\n                data: {\n                  __typename: 'Query',\n                  me: data?.register.user,\n                },\n              })\n              cache.evict({ fieldName: 'posts:{}' })\n            },\n          }) // this return a promise needed to stop the spinner or isSubmitting\n\n          if (response.data?.register.errors) {\n            console.log(toErrorMap(response.data.register.errors))\n            setErrors(toErrorMap(response.data.register.errors))\n            // set errors shows error below input field. to show error below particular field we say {username: \"too small\"}\n          } else if (response.data?.register.user) {\n            // worked\n            router.push('/')\n          }\n        }}\n      >\n        {({ isSubmitting }) => (\n          <Form>\n            <InputField\n              name=\"username\"\n              placeholder=\"username\"\n              label=\"username\"\n            />\n            <Box mt={4}>\n              <InputField name=\"email\" placeholder=\"email\" label=\"email\" />\n            </Box>\n            <Box mt={4}>\n              <InputField\n                name=\"password\"\n                placeholder=\"password\"\n                label=\"password\"\n                type=\"password\"\n              />\n            </Box>\n            <Flex mt={2}>\n              <NextLink href=\"/forgot-password\">\n                <Link ml=\"auto\">forgot password?</Link>\n              </NextLink>\n            </Flex>\n            <Button\n              mt={4}\n              type=\"submit\"\n              colorScheme=\"teal\"\n              isLoading={isSubmitting}\n            >\n              register\n            </Button>\n          </Form>\n        )}\n      </Formik>\n    </Wrapper>\n  )\n}\n\nexport default withApollo({ ssr: false })(Register)\n"]},"metadata":{},"sourceType":"module"}