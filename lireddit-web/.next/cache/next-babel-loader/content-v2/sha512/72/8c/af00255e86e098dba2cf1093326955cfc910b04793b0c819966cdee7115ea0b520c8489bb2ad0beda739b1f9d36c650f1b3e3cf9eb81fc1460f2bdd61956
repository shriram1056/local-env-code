{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/shriram/Downloads/lireddit/lireddit-web/src/components/NavBar.tsx\";\nimport { Box, Button, Flex, Heading, Link } from '@chakra-ui/react';\nimport { default as NextLink } from 'next/link';\nimport { useRouter } from 'next/router';\nimport React from 'react';\nimport { useLogoutMutation, useMeQuery } from '../generated/graphql';\nimport { isServer } from '../utils/isServer';\nexport const NavBar = ({}) => {\n  const {\n    loading: LogoutFetching\n  },\n        logout = useLogoutMutation();\n  const {\n    data,\n    loading\n  } = useMeQuery({\n    skip: isServer() //skip: don't run this if it has the condition\n\n  });\n  const router = useRouter(); // OPTIONAL: if this request is made in nextjs server then we cant fetch the user as cookie is not forwarded to graphQL API.BUT NOW HAVE FORWARDED THE COOKIE TO API WITH HEADERS IN CREATEURQLCLIENT. SO, THIS CAN BE REMOVED IF NEEDED\n\n  let body = null;\n\n  if (loading) {// user not logged in\n  } else if (!(data !== null && data !== void 0 && data.me)) {\n    body = /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(NextLink, {\n        href: \"/login\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          mr: 2,\n          children: \"login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NextLink, {\n        href: \"/register\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          children: \"register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true); // user is logged in\n  } else {\n    body = /*#__PURE__*/_jsxDEV(Flex, {\n      align: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(NextLink, {\n        href: \"/create-post\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          as: Link,\n          mr: 4,\n          children: \"create post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        mr: 2,\n        children: data.me.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"link\",\n        onClick: () => {\n          logout();\n          router.reload(); // reset the cache to when logout to remove the upvotes or Green/red color on buttons by user\n        },\n        isLoading: LogoutFetching,\n        children: \"logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    zIndex: 1,\n    position: \"sticky\",\n    top: 0,\n    bg: \"tan\",\n    p: 4,\n    children: /*#__PURE__*/_jsxDEV(Flex, {\n      flex: 1,\n      m: \"auto\",\n      align: \"center\",\n      maxW: 800,\n      children: [/*#__PURE__*/_jsxDEV(NextLink, {\n        href: \"/\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          children: /*#__PURE__*/_jsxDEV(Heading, {\n            children: \"LiReddit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        ml: 'auto',\n        children: body\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};","map":{"version":3,"sources":["/home/shriram/Downloads/lireddit/lireddit-web/src/components/NavBar.tsx"],"names":["Box","Button","Flex","Heading","Link","default","NextLink","useRouter","React","useLogoutMutation","useMeQuery","isServer","NavBar","loading","LogoutFetching","logout","data","skip","router","body","me","username","reload"],"mappings":"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","sourcesContent":["import { Box, Button, Flex, Heading, Link } from '@chakra-ui/react'\nimport { default as NextLink } from 'next/link'\nimport { useRouter } from 'next/router'\nimport React from 'react'\nimport { useLogoutMutation, useMeQuery } from '../generated/graphql'\nimport { isServer } from '../utils/isServer'\n\ninterface NavBarProps {}\n\nexport const NavBar: React.FC<NavBarProps> = ({}) => {\n  const { loading: LogoutFetching },\n    logout = useLogoutMutation()\n  const { data, loading } = useMeQuery({\n    skip: isServer(), //skip: don't run this if it has the condition\n  })\n  const router = useRouter()\n  // OPTIONAL: if this request is made in nextjs server then we cant fetch the user as cookie is not forwarded to graphQL API.BUT NOW HAVE FORWARDED THE COOKIE TO API WITH HEADERS IN CREATEURQLCLIENT. SO, THIS CAN BE REMOVED IF NEEDED\n\n  let body = null\n\n  if (loading) {\n    // user not logged in\n  } else if (!data?.me) {\n    body = (\n      <>\n        <NextLink href=\"/login\">\n          <Link mr={2}>login</Link>\n        </NextLink>\n        <NextLink href=\"/register\">\n          <Link>register</Link>\n        </NextLink>\n      </>\n    )\n    // user is logged in\n  } else {\n    body = (\n      <Flex align=\"center\">\n        <NextLink href=\"/create-post\">\n          <Button as={Link} mr={4}>\n            create post\n          </Button>\n        </NextLink>\n        <Box mr={2}>{data.me.username}</Box>\n        <Button\n          variant=\"link\"\n          onClick={() => {\n            logout()\n            router.reload()\n            // reset the cache to when logout to remove the upvotes or Green/red color on buttons by user\n          }}\n          isLoading={LogoutFetching}\n        >\n          logout\n        </Button>\n      </Flex>\n    )\n  }\n  return (\n    <Flex zIndex={1} position=\"sticky\" top={0} bg=\"tan\" p={4}>\n      <Flex flex={1} m=\"auto\" align=\"center\" maxW={800}>\n        <NextLink href=\"/\">\n          {/* href=\"url in next js server\" as=\"real url\" */}\n          <Link>\n            <Heading>LiReddit</Heading>\n          </Link>\n        </NextLink>\n        <Box ml={'auto'}>{body}</Box>\n      </Flex>\n    </Flex>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}