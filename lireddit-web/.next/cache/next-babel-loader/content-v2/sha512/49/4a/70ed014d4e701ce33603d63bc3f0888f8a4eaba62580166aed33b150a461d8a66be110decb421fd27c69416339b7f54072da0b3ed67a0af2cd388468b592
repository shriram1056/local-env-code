{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/shriram/Downloads/lireddit/lireddit-web/src/pages/index.tsx\";\nimport { Box, Button, Flex, Heading, Link, Stack, Text } from '@chakra-ui/react';\nimport { withUrqlClient } from 'next-urql';\nimport NextLink from 'next/link';\nimport React, { useState } from 'react';\nimport { Layout } from '../components/Layout';\nimport { usePostsQuery } from '../generated/graphql';\nimport { createUrqlClient } from '../utils/createUrqlClient';\n\nconst Index = () => {\n  const {\n    0: variables,\n    1: setVariables\n  } = useState({\n    limit: 10,\n    cursor: null\n  });\n  const [{\n    data,\n    fetching\n  }] = usePostsQuery({\n    variables\n  });\n\n  if (!fetching && !data) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \" you got query failed for some reason\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [/*#__PURE__*/_jsxDEV(Flex, {\n      align: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        children: \"LiReddit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NextLink, {\n        href: \"/create-post\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          ml: \"auto\",\n          children: \"create post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), !data && fetching ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Stack, {\n      spacing: 8,\n      children: data.posts.map(p => /*#__PURE__*/_jsxDEV(Box, {\n        p: 5,\n        shadow: \"md\",\n        borderWidtth: \"1px\",\n        children: [/*#__PURE__*/_jsxDEV(Heading, {\n          fontSize: \"xl\",\n          children: p.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          mt: 4,\n          children: p.textSnippet\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 15\n        }, this)]\n      }, p.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this), data ? /*#__PURE__*/_jsxDEV(Flex, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        m: \"auto\",\n        my: 8,\n        children: \"load more\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n\nexport default withUrqlClient(createUrqlClient, {\n  ssr: true\n})(Index);","map":{"version":3,"sources":["/home/shriram/Downloads/lireddit/lireddit-web/src/pages/index.tsx"],"names":["Box","Button","Flex","Heading","Link","Stack","Text","withUrqlClient","NextLink","React","useState","Layout","usePostsQuery","createUrqlClient","Index","variables","setVariables","limit","cursor","data","fetching","posts","map","p","title","textSnippet","id","ssr"],"mappings":";;AAAA,SAASA,GAAT,EAAcC,MAAd,EAAsBC,IAAtB,EAA4BC,OAA5B,EAAqCC,IAArC,EAA2CC,KAA3C,EAAkDC,IAAlD,QAA8D,kBAA9D;AACA,SAASC,cAAT,QAA+B,WAA/B;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,QAAuB,sBAAvB;AACA,SAASC,aAAT,QAA8B,sBAA9B;AACA,SAASC,gBAAT,QAAiC,2BAAjC;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAClB,QAAM;AAAA,OAACC,SAAD;AAAA,OAAYC;AAAZ,MAA4BN,QAAQ,CAAC;AAAEO,IAAAA,KAAK,EAAE,EAAT;AAAaC,IAAAA,MAAM,EAAE;AAArB,GAAD,CAA1C;AACA,QAAM,CAAC;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAD,IAAuBR,aAAa,CAAC;AACzCG,IAAAA;AADyC,GAAD,CAA1C;;AAGA,MAAI,CAACK,QAAD,IAAa,CAACD,IAAlB,EAAwB;AACtB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AACD,sBACE,QAAC,MAAD;AAAA,4BACE,QAAC,IAAD;AAAM,MAAA,KAAK,EAAC,QAAZ;AAAA,8BACE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,QAAD;AAAU,QAAA,IAAI,EAAC,cAAf;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,EAAE,EAAC,MAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAOG,CAACA,IAAD,IAASC,QAAT,gBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,gBAGC,QAAC,KAAD;AAAO,MAAA,OAAO,EAAE,CAAhB;AAAA,gBACGD,IAAI,CAAEE,KAAN,CAAYC,GAAZ,CAAiBC,CAAD,iBACf,QAAC,GAAD;AAAgB,QAAA,CAAC,EAAE,CAAnB;AAAsB,QAAA,MAAM,EAAC,IAA7B;AAAkC,QAAA,YAAY,EAAC,KAA/C;AAAA,gCACE,QAAC,OAAD;AAAS,UAAA,QAAQ,EAAC,IAAlB;AAAA,oBAAwBA,CAAC,CAACC;AAA1B;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,IAAD;AAAM,UAAA,EAAE,EAAE,CAAV;AAAA,oBAAcD,CAAC,CAACE;AAAhB;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA,SAAUF,CAAC,CAACG,EAAZ;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAVJ,EAmBGP,IAAI,gBACH,QAAC,IAAD;AAAA,6BACE,QAAC,MAAD;AAAQ,QAAA,CAAC,EAAC,MAAV;AAAiB,QAAA,EAAE,EAAE,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADG,GAMD,IAzBN;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA6BD,CArCD;;AAsCA,eAAeZ,cAAc,CAACM,gBAAD,EAAmB;AAAEc,EAAAA,GAAG,EAAE;AAAP,CAAnB,CAAd,CAAgDb,KAAhD,CAAf","sourcesContent":["import { Box, Button, Flex, Heading, Link, Stack, Text } from '@chakra-ui/react'\nimport { withUrqlClient } from 'next-urql'\nimport NextLink from 'next/link'\nimport React, { useState } from 'react'\nimport { Layout } from '../components/Layout'\nimport { usePostsQuery } from '../generated/graphql'\nimport { createUrqlClient } from '../utils/createUrqlClient'\n\nconst Index = () => {\n  const [variables, setVariables] = useState({ limit: 10, cursor: null })\n  const [{ data, fetching }] = usePostsQuery({\n    variables,\n  })\n  if (!fetching && !data) {\n    return <div> you got query failed for some reason</div>\n  }\n  return (\n    <Layout>\n      <Flex align=\"center\">\n        <Heading>LiReddit</Heading>\n        <NextLink href=\"/create-post\">\n          <Link ml=\"auto\">create post</Link>\n        </NextLink>\n      </Flex>\n      {!data && fetching ? (\n        <div>loading</div>\n      ) : (\n        <Stack spacing={8}>\n          {data!.posts.map((p) => (\n            <Box key={p.id} p={5} shadow=\"md\" borderWidtth=\"1px\">\n              <Heading fontSize=\"xl\">{p.title}</Heading>\n              <Text mt={4}>{p.textSnippet}</Text>\n            </Box>\n          ))}\n        </Stack>\n      )}\n      {data ? (\n        <Flex>\n          <Button m=\"auto\" my={8}>\n            load more\n          </Button>\n        </Flex>\n      ) : null}\n    </Layout>\n  )\n}\nexport default withUrqlClient(createUrqlClient, { ssr: true })(Index)\n"]},"metadata":{},"sourceType":"module"}