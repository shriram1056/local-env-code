{
  "compilerOptions": {
    "target": "es6",
    "module": "commonjs",
    "lib": ["dom", "es6", "es2017", "esnext.asynciterable"], //with --lib you can specify a list of built-in API declaration groups that you can chose to include in your project. For instance, if you expect your runtime to have support for Map, Set and Promise (e.g. most evergreen browsers today), just include --lib es2015.collection,es2015.promise.

    "skipLibCheck": true, // this recommended to be true.Rather than doing a full check of all d.ts files, TypeScript will type check the code you specifically refer to in your appâ€™s source code.

    "sourceMap": true, // recommended to be true
    "outDir": "./dist", // specify the output destination
    "moduleResolution": "node", // module resolution node is recommended instead of classic

    // typescript syntax checks
    "removeComments": true,
    "noImplicitAny": true,
    "strictNullChecks": true,
    "strictFunctionTypes": true, // i think this cheecks the function parameter and returnt type
    "noImplicitThis": true, // don't know about this
    "noUnusedLocals": true,
    "noUnusedParameters": true,
    "noImplicitReturns": true, //Report error when not all code paths in function return a value
    "noFallthroughCasesInSwitch": true,

    "allowSyntheticDefaultImports": true, // recommended to be true
    "esModuleInterop": true, // recommended to be true
    "resolveJsonModule": true, // recommended to be true
    "baseUrl": ".", // '.' means the current path level

    // for decorators in typeORM
    "emitDecoratorMetadata": true,
    "experimentalDecorators": true
  },
  "exclude": ["node_modules"],
  "include": ["./src/**/*.tsx", "./src/**/*.ts"]
  // The double star in this case means all folders within the current folder
}
//  don't modify ts config unless a project required
