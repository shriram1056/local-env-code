{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"/home/shriram/Downloads/lireddit/lireddit-web/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectDestructuringEmpty from \"/home/shriram/Downloads/lireddit/lireddit-web/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty\";\n\nvar _jsxFileName = \"/home/shriram/Downloads/lireddit/lireddit-web/src/components/NavBar.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { Box, Button, Flex, Heading, Link } from '@chakra-ui/react';\nimport NextLink from 'next/link';\nimport React from 'react';\nimport { useLogoutMutation, useMeQuery } from '../generated/graphql';\nimport { isServer } from '../utils/isServer';\nexport var NavBar = function NavBar(_ref) {\n  _s();\n\n  _objectDestructuringEmpty(_ref);\n\n  var _useLogoutMutation = useLogoutMutation(),\n      _useLogoutMutation2 = _slicedToArray(_useLogoutMutation, 2),\n      LogoutFetching = _useLogoutMutation2[0].fetching,\n      logout = _useLogoutMutation2[1];\n\n  var _useMeQuery = useMeQuery({\n    pause: isServer()\n  }),\n      _useMeQuery2 = _slicedToArray(_useMeQuery, 1),\n      _useMeQuery2$ = _useMeQuery2[0],\n      data = _useMeQuery2$.data,\n      fetching = _useMeQuery2$.fetching; // OPTIONAL: if this request is made in nextjs server then we cant fetch the user as cookie is not forwarded to graphQL API.BUT NOW HAVE FORWARDED THE COOKIE TO API WITH HEADERS IN CREATEURQLCLIENT. SO, THIS CAN BE REMOVED IF NEEDED\n\n\n  var body = null;\n\n  if (fetching) {// user not logged in\n  } else if (!(data !== null && data !== void 0 && data.me)) {\n    body = /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(NextLink, {\n        href: \"/login\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          mr: 2,\n          children: \"login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(NextLink, {\n        href: \"/register\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          children: \"register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true); // user is logged in\n  } else {\n    body = /*#__PURE__*/_jsxDEV(Flex, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        as: Link,\n        mr: 4,\n        children: \"create post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Box, {\n        mr: 2,\n        children: data.me.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"link\",\n        onClick: function onClick() {\n          logout();\n        },\n        isLoading: LogoutFetching,\n        children: \"logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, _this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    zIndex: 1,\n    position: \"sticky\",\n    top: 0,\n    bg: \"tomato\",\n    p: 4,\n    align: \"center\",\n    children: [/*#__PURE__*/_jsxDEV(NextLink, {\n      href: \"/\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        children: /*#__PURE__*/_jsxDEV(Heading, {\n          children: \"LiReddit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Box, {\n      ml: 'auto',\n      children: body\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(NavBar, \"xksjA9+4ojvxegpFH+ybscu3vWY=\", false, function () {\n  return [useLogoutMutation, useMeQuery];\n});\n\n_c = NavBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"NavBar\");","map":{"version":3,"sources":["/home/shriram/Downloads/lireddit/lireddit-web/src/components/NavBar.tsx"],"names":["Box","Button","Flex","Heading","Link","NextLink","React","useLogoutMutation","useMeQuery","isServer","NavBar","LogoutFetching","fetching","logout","pause","data","body","me","username"],"mappings":";;;;;;;;;AAAA,SAASA,GAAT,EAAcC,MAAd,EAAsBC,IAAtB,EAA4BC,OAA5B,EAAqCC,IAArC,QAAiD,kBAAjD;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,iBAAT,EAA4BC,UAA5B,QAA8C,sBAA9C;AACA,SAASC,QAAT,QAAyB,mBAAzB;AAIA,OAAO,IAAMC,MAA6B,GAAG,SAAhCA,MAAgC,OAAQ;AAAA;;AAAA;;AAAA,2BACJH,iBAAiB,EADb;AAAA;AAAA,MAChCI,cADgC,0BAC1CC,QAD0C;AAAA,MACdC,MADc;;AAAA,oBAEtBL,UAAU,CAAC;AACtCM,IAAAA,KAAK,EAAEL,QAAQ;AADuB,GAAD,CAFY;AAAA;AAAA;AAAA,MAE1CM,IAF0C,iBAE1CA,IAF0C;AAAA,MAEpCH,QAFoC,iBAEpCA,QAFoC,EAKnD;;;AAEA,MAAII,IAAI,GAAG,IAAX;;AAEA,MAAIJ,QAAJ,EAAc,CACZ;AACD,GAFD,MAEO,IAAI,EAACG,IAAD,aAACA,IAAD,eAACA,IAAI,CAAEE,EAAP,CAAJ,EAAe;AACpBD,IAAAA,IAAI,gBACF;AAAA,8BACE,QAAC,QAAD;AAAU,QAAA,IAAI,EAAC,QAAf;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,EAAE,EAAE,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,eADF,eAIE,QAAC,QAAD;AAAU,QAAA,IAAI,EAAC,WAAf;AAAA,+BACE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,eAJF;AAAA,oBADF,CADoB,CAWpB;AACD,GAZM,MAYA;AACLA,IAAAA,IAAI,gBACF,QAAC,IAAD;AAAA,8BACE,QAAC,MAAD;AAAQ,QAAA,EAAE,EAAEZ,IAAZ;AAAkB,QAAA,EAAE,EAAE,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAIE,QAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAA,kBAAaW,IAAI,CAACE,EAAL,CAAQC;AAArB;AAAA;AAAA;AAAA;AAAA,eAJF,eAKE,QAAC,MAAD;AACE,QAAA,OAAO,EAAC,MADV;AAEE,QAAA,OAAO,EAAE,mBAAM;AACbL,UAAAA,MAAM;AACP,SAJH;AAKE,QAAA,SAAS,EAAEF,cALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eALF;AAAA;AAAA;AAAA;AAAA;AAAA,aADF;AAiBD;;AACD,sBACE,QAAC,IAAD;AAAM,IAAA,MAAM,EAAE,CAAd;AAAiB,IAAA,QAAQ,EAAC,QAA1B;AAAmC,IAAA,GAAG,EAAE,CAAxC;AAA2C,IAAA,EAAE,EAAC,QAA9C;AAAuD,IAAA,CAAC,EAAE,CAA1D;AAA6D,IAAA,KAAK,EAAC,QAAnE;AAAA,4BACE,QAAC,QAAD;AAAU,MAAA,IAAI,EAAC,GAAf;AAAA,6BAEE,QAAC,IAAD;AAAA,+BACE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,aADF,eAOE,QAAC,GAAD;AAAK,MAAA,EAAE,EAAE,MAAT;AAAA,gBAAkBK;AAAlB;AAAA;AAAA;AAAA;AAAA,aAPF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAWD,CArDM;;GAAMN,M;UACoCH,iB,EAClBC,U;;;KAFlBE,M","sourcesContent":["import { Box, Button, Flex, Heading, Link } from '@chakra-ui/react'\nimport NextLink from 'next/link'\nimport React from 'react'\nimport { useLogoutMutation, useMeQuery } from '../generated/graphql'\nimport { isServer } from '../utils/isServer'\n\ninterface NavBarProps {}\n\nexport const NavBar: React.FC<NavBarProps> = ({}) => {\n  const [{ fetching: LogoutFetching }, logout] = useLogoutMutation()\n  const [{ data, fetching }] = useMeQuery({\n    pause: isServer(),\n  })\n  // OPTIONAL: if this request is made in nextjs server then we cant fetch the user as cookie is not forwarded to graphQL API.BUT NOW HAVE FORWARDED THE COOKIE TO API WITH HEADERS IN CREATEURQLCLIENT. SO, THIS CAN BE REMOVED IF NEEDED\n\n  let body = null\n\n  if (fetching) {\n    // user not logged in\n  } else if (!data?.me) {\n    body = (\n      <>\n        <NextLink href=\"/login\">\n          <Link mr={2}>login</Link>\n        </NextLink>\n        <NextLink href=\"/register\">\n          <Link>register</Link>\n        </NextLink>\n      </>\n    )\n    // user is logged in\n  } else {\n    body = (\n      <Flex>\n        <Button as={Link} mr={4}>\n          create post\n        </Button>\n        <Box mr={2}>{data.me.username}</Box>\n        <Button\n          variant=\"link\"\n          onClick={() => {\n            logout()\n          }}\n          isLoading={LogoutFetching}\n        >\n          logout\n        </Button>\n      </Flex>\n    )\n  }\n  return (\n    <Flex zIndex={1} position=\"sticky\" top={0} bg=\"tomato\" p={4} align=\"center\">\n      <NextLink href=\"/\">\n        {/* href=\"url in next js server\" as=\"real url\" */}\n        <Link>\n          <Heading>LiReddit</Heading>\n        </Link>\n      </NextLink>\n      <Box ml={'auto'}>{body}</Box>\n    </Flex>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}