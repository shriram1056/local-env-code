{"ast":null,"code":"import { useRouter } from 'next/router';\nexport const useGetIntId = () => {\n  const router = useRouter();\n  const intId = typeof router.query.id === 'string' ? parseInt(router.query.id) : -1;\n  return intId;\n};","map":{"version":3,"sources":["/home/shriram/Downloads/lireddit/lireddit-web/src/utils/useGetIntId.ts"],"names":["useRouter","useGetIntId","router","intId","query","id","parseInt"],"mappings":"AAAA,SAASA,SAAT,QAA0B,aAA1B;AAEA,OAAO,MAAMC,WAAW,GAAG,MAAM;AAC/B,QAAMC,MAAM,GAAGF,SAAS,EAAxB;AACA,QAAMG,KAAK,GACT,OAAOD,MAAM,CAACE,KAAP,CAAaC,EAApB,KAA2B,QAA3B,GAAsCC,QAAQ,CAACJ,MAAM,CAACE,KAAP,CAAaC,EAAd,CAA9C,GAAkE,CAAC,CADrE;AAGA,SAAOF,KAAP;AACD,CANM","sourcesContent":["import { useRouter } from 'next/router'\n\nexport const useGetIntId = () => {\n  const router = useRouter()\n  const intId =\n    typeof router.query.id === 'string' ? parseInt(router.query.id) : -1\n\n  return intId\n}\n"]},"metadata":{},"sourceType":"module"}