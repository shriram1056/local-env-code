{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/shriram/Downloads/lireddit/lireddit-web/src/pages/change-password/[key].tsx\";\n// you have to name the file as [name].\n//the name can be anything, you don't have to care bout them as long as they are in array.\nimport { Box, Button, Flex, Link } from '@chakra-ui/react';\nimport { Form, Formik } from 'formik';\nimport { withUrqlClient } from 'next-urql';\nimport NextLink from 'next/link';\nimport { useRouter } from 'next/router';\nimport React, { useState } from 'react';\nimport { InputField } from '../../components/inputField';\nimport { Wrapper } from '../../components/Wrapper';\nimport { useChangePasswordMutation } from '../../generated/graphql';\nimport { createUrqlClient } from '../../utils/createUrqlClient';\nimport { toErrorMap } from '../../utils/toErrorMap'; //NextPage<{ token: string }>\n// this means that whatever after http://localhost:3000/change-password/ is stored in 'token' variable\n// this token variable is accessed via query object in getinitialprops and passed to ({ token }) => {\n\nconst ChangePassword = ({\n  token\n}) => {\n  const router = useRouter();\n  const [, changePassword] = useChangePasswordMutation();\n  const {\n    0: tokenError,\n    1: setTokenError\n  } = useState('');\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    variant: \"small\",\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        newPassword: ''\n      },\n      onSubmit: async (values, {\n        setErrors\n      }) => {\n        var _response$data, _response$data2;\n\n        const response = await changePassword({\n          newPassword: values.newPassword,\n          token\n        });\n\n        if ((_response$data = response.data) !== null && _response$data !== void 0 && _response$data.changePassword.errors) {\n          const errorMap = toErrorMap(response.data.changePassword.errors);\n\n          if ('token' in errorMap) {\n            setTokenError(errorMap.token);\n          } // The in operator returns true if the specified property is in the specified object\n\n\n          setErrors(errorMap);\n        } else if ((_response$data2 = response.data) !== null && _response$data2 !== void 0 && _response$data2.changePassword.user) {\n          // worked\n          router.push('/');\n        }\n      },\n      children: ({\n        isSubmitting\n      }) => /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(InputField, {\n          name: \"newPassword\",\n          placeholder: \"new password\",\n          label: \"New Password\",\n          type: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this), tokenError ? /*#__PURE__*/_jsxDEV(Flex, {\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            mr: 2,\n            style: {\n              color: 'red'\n            },\n            children: tokenError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(NextLink, {\n            href: \"/forgot-password\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              children: \"click here to get a new one\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 15\n        }, this) : null, /*#__PURE__*/_jsxDEV(Button, {\n          mt: 4,\n          type: \"submit\",\n          colorScheme: \"teal\",\n          isLoading: isSubmitting,\n          children: \"change password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\nChangePassword.getInitialProps = ({\n  query\n}) => {\n  return {\n    token: query.token\n  };\n};\n\nexport default withUrqlClient(createUrqlClient, {\n  ssr: false\n})(ChangePassword);","map":{"version":3,"sources":["/home/shriram/Downloads/lireddit/lireddit-web/src/pages/change-password/[key].tsx"],"names":["Box","Button","Flex","Link","Form","Formik","withUrqlClient","NextLink","useRouter","React","useState","InputField","Wrapper","useChangePasswordMutation","createUrqlClient","toErrorMap","ChangePassword","token","router","changePassword","tokenError","setTokenError","newPassword","values","setErrors","response","data","errors","errorMap","user","push","isSubmitting","color","getInitialProps","query","ssr"],"mappings":";;AAAA;AACA;AACA,SAASA,GAAT,EAAcC,MAAd,EAAsBC,IAAtB,EAA4BC,IAA5B,QAAwC,kBAAxC;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,QAA7B;AAEA,SAASC,cAAT,QAA+B,WAA/B;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,UAAT,QAA2B,6BAA3B;AACA,SAASC,OAAT,QAAwB,0BAAxB;AACA,SAASC,yBAAT,QAA0C,yBAA1C;AACA,SAASC,gBAAT,QAAiC,8BAAjC;AACA,SAASC,UAAT,QAA2B,wBAA3B,C,CACA;AACA;AAEA;;AAEA,MAAMC,cAA2C,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AACjE,QAAMC,MAAM,GAAGV,SAAS,EAAxB;AACA,QAAM,GAAGW,cAAH,IAAqBN,yBAAyB,EAApD;AACA,QAAM;AAAA,OAACO,UAAD;AAAA,OAAaC;AAAb,MAA8BX,QAAQ,CAAC,EAAD,CAA5C;AACA,sBACE,QAAC,OAAD;AAAS,IAAA,OAAO,EAAC,OAAjB;AAAA,2BACE,QAAC,MAAD;AACE,MAAA,aAAa,EAAE;AAAEY,QAAAA,WAAW,EAAE;AAAf,OADjB;AAEE,MAAA,QAAQ,EAAE,OAAOC,MAAP,EAAe;AAAEC,QAAAA;AAAF,OAAf,KAAiC;AAAA;;AACzC,cAAMC,QAAQ,GAAG,MAAMN,cAAc,CAAC;AACpCG,UAAAA,WAAW,EAAEC,MAAM,CAACD,WADgB;AAEpCL,UAAAA;AAFoC,SAAD,CAArC;;AAIA,8BAAIQ,QAAQ,CAACC,IAAb,2CAAI,eAAeP,cAAf,CAA8BQ,MAAlC,EAA0C;AACxC,gBAAMC,QAAQ,GAAGb,UAAU,CAACU,QAAQ,CAACC,IAAT,CAAcP,cAAd,CAA6BQ,MAA9B,CAA3B;;AACA,cAAI,WAAWC,QAAf,EAAyB;AACvBP,YAAAA,aAAa,CAACO,QAAQ,CAACX,KAAV,CAAb;AACD,WAJuC,CAKxC;;;AACAO,UAAAA,SAAS,CAACI,QAAD,CAAT;AACD,SAPD,MAOO,uBAAIH,QAAQ,CAACC,IAAb,4CAAI,gBAAeP,cAAf,CAA8BU,IAAlC,EAAwC;AAC7C;AACAX,UAAAA,MAAM,CAACY,IAAP,CAAY,GAAZ;AACD;AACF,OAlBH;AAAA,gBAoBG,CAAC;AAAEC,QAAAA;AAAF,OAAD,kBACC,QAAC,IAAD;AAAA,gCACE,QAAC,UAAD;AACE,UAAA,IAAI,EAAC,aADP;AAEE,UAAA,WAAW,EAAC,cAFd;AAGE,UAAA,KAAK,EAAC,cAHR;AAIE,UAAA,IAAI,EAAC;AAJP;AAAA;AAAA;AAAA;AAAA,gBADF,EAOGX,UAAU,gBACT,QAAC,IAAD;AAAA,kCACE,QAAC,GAAD;AAAK,YAAA,EAAE,EAAE,CAAT;AAAY,YAAA,KAAK,EAAE;AAAEY,cAAAA,KAAK,EAAE;AAAT,aAAnB;AAAA,sBACGZ;AADH;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE,QAAC,QAAD;AAAU,YAAA,IAAI,EAAC,kBAAf;AAAA,mCACE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADS,GASP,IAhBN,eAiBE,QAAC,MAAD;AACE,UAAA,EAAE,EAAE,CADN;AAEE,UAAA,IAAI,EAAC,QAFP;AAGE,UAAA,WAAW,EAAC,MAHd;AAIE,UAAA,SAAS,EAAEW,YAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAjBF;AAAA;AAAA;AAAA;AAAA;AAAA;AArBJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAqDD,CAzDD;;AA2DAf,cAAc,CAACiB,eAAf,GAAiC,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAC9C,SAAO;AACLjB,IAAAA,KAAK,EAAEiB,KAAK,CAACjB;AADR,GAAP;AAGD,CAJD;;AAMA,eAAeX,cAAc,CAACQ,gBAAD,EAAmB;AAAEqB,EAAAA,GAAG,EAAE;AAAP,CAAnB,CAAd,CACbnB,cADa,CAAf","sourcesContent":["// you have to name the file as [name].\n//the name can be anything, you don't have to care bout them as long as they are in array.\nimport { Box, Button, Flex, Link } from '@chakra-ui/react'\nimport { Form, Formik } from 'formik'\nimport { NextPage } from 'next'\nimport { withUrqlClient } from 'next-urql'\nimport NextLink from 'next/link'\nimport { useRouter } from 'next/router'\nimport React, { useState } from 'react'\nimport { InputField } from '../../components/inputField'\nimport { Wrapper } from '../../components/Wrapper'\nimport { useChangePasswordMutation } from '../../generated/graphql'\nimport { createUrqlClient } from '../../utils/createUrqlClient'\nimport { toErrorMap } from '../../utils/toErrorMap'\n//NextPage<{ token: string }>\n// this means that whatever after http://localhost:3000/change-password/ is stored in 'token' variable\n\n// this token variable is accessed via query object in getinitialprops and passed to ({ token }) => {\n\nconst ChangePassword: NextPage<{ token: string }> = ({ token }) => {\n  const router = useRouter()\n  const [, changePassword] = useChangePasswordMutation()\n  const [tokenError, setTokenError] = useState('')\n  return (\n    <Wrapper variant=\"small\">\n      <Formik\n        initialValues={{ newPassword: '' }}\n        onSubmit={async (values, { setErrors }) => {\n          const response = await changePassword({\n            newPassword: values.newPassword,\n            token,\n          })\n          if (response.data?.changePassword.errors) {\n            const errorMap = toErrorMap(response.data.changePassword.errors)\n            if ('token' in errorMap) {\n              setTokenError(errorMap.token)\n            }\n            // The in operator returns true if the specified property is in the specified object\n            setErrors(errorMap)\n          } else if (response.data?.changePassword.user) {\n            // worked\n            router.push('/')\n          }\n        }}\n      >\n        {({ isSubmitting }) => (\n          <Form>\n            <InputField\n              name=\"newPassword\"\n              placeholder=\"new password\"\n              label=\"New Password\"\n              type=\"password\"\n            />\n            {tokenError ? (\n              <Flex>\n                <Box mr={2} style={{ color: 'red' }}>\n                  {tokenError}\n                </Box>\n                <NextLink href=\"/forgot-password\">\n                  <Link>click here to get a new one</Link>\n                </NextLink>\n              </Flex>\n            ) : null}\n            <Button\n              mt={4}\n              type=\"submit\"\n              colorScheme=\"teal\"\n              isLoading={isSubmitting}\n            >\n              change password\n            </Button>\n          </Form>\n        )}\n      </Formik>\n    </Wrapper>\n  )\n}\n\nChangePassword.getInitialProps = ({ query }) => {\n  return {\n    token: query.token as string,\n  }\n}\n\nexport default withUrqlClient(createUrqlClient, { ssr: false })(\n  ChangePassword as any\n)\n"]},"metadata":{},"sourceType":"module"}