{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/shriram/Downloads/lireddit/lireddit-web/src/pages/index.tsx\";\nimport { Box, Button, Flex, Heading, Link, Stack, Text } from '@chakra-ui/react';\nimport { withApollo } from 'next-apollo';\nimport NextLink from 'next/link';\nimport React from 'react';\nimport { EditDeletePostButtons } from '../components/EditDeletePostButtons';\nimport { Layout } from '../components/Layout';\nimport { UpdootSection } from '../components/updootSection';\nimport { usePostsQuery } from '../generated/graphql';\n\nconst Index = () => {\n  const {\n    data,\n    loading,\n    fetchMore,\n    variables\n  } = usePostsQuery({\n    variables: {\n      limit: 15,\n      cursor: null\n    },\n    notifyOnNetworkStatusChange: true //Enabling this option will also ensure that the value of loading updates accordingly\n\n  }); // variables is a in=build query method\n\n  if (!loading && !data) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \" you got query failed for some reason\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [!data && loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Stack, {\n      spacing: 8,\n      children: data.posts.posts.map(p => // IMPORTANT: CAN'T READ PROPERTY 'ID' OF NULL if the ternary is removed. p.id,if p is null we do null.id\n      !p ? null : /*#__PURE__*/_jsxDEV(Flex, {\n        p: 5,\n        shadow: \"md\",\n        borderWidth: \"1px\",\n        children: [/*#__PURE__*/_jsxDEV(UpdootSection, {\n          post: p\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          flex: 1,\n          children: [/*#__PURE__*/_jsxDEV(NextLink, {\n            href: \"/post/[id]\",\n            as: `/post/${p.id}`,\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              children: /*#__PURE__*/_jsxDEV(Heading, {\n                fontSize: \"xl\",\n                children: p.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            children: [\"posted by \", p.creator.username]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Flex, {\n            children: [/*#__PURE__*/_jsxDEV(Text, {\n              flex: 1,\n              mt: 4,\n              children: p.textSnippet\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              ml: \"auto\",\n              children: /*#__PURE__*/_jsxDEV(EditDeletePostButtons, {\n                id: p.id,\n                creatorId: p.creator.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }, this)]\n      }, p.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this), data && data.posts.hasMore ? /*#__PURE__*/_jsxDEV(Flex, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => {\n          fetchMore({\n            variables: {\n              limit: variables === null || variables === void 0 ? void 0 : variables.limit,\n              cursor: data.posts.posts[data.posts.posts.length - 1].createdAt\n            } // updateQuery: (\n            //   previousValue,\n            //   { fetchMoreResult }\n            // ): PostsQuery => {\n            //   if (!fetchMoreResult) {\n            //     return previousValue as PostsQuery\n            //   }\n            //   return {\n            //     __typename: 'Query',\n            //     posts: {\n            //       __typename: 'PaginatedPosts',\n            //       hasMore: (fetchMoreResult as PostsQuery).posts.hasMore,\n            //       posts: [\n            //         ...(previousValue as PostsQuery).posts.posts,\n            //         ...(fetchMoreResult as PostsQuery).posts.posts,\n            //       ],\n            //     },\n            //   }\n            // },\n\n          });\n        },\n        isLoading: loading,\n        m: \"auto\",\n        my: 8,\n        children: \"load more\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\nexport default withApollo({\n  ssr: false\n})(Index);","map":{"version":3,"sources":["/home/shriram/Downloads/lireddit/lireddit-web/src/pages/index.tsx"],"names":["Box","Button","Flex","Heading","Link","Stack","Text","withApollo","NextLink","React","EditDeletePostButtons","Layout","UpdootSection","usePostsQuery","Index","data","loading","fetchMore","variables","limit","cursor","notifyOnNetworkStatusChange","posts","map","p","id","title","creator","username","textSnippet","hasMore","length","createdAt","ssr"],"mappings":"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","sourcesContent":["import { Box, Button, Flex, Heading, Link, Stack, Text } from '@chakra-ui/react'\nimport { withApollo } from 'next-apollo'\nimport NextLink from 'next/link'\nimport React from 'react'\nimport { EditDeletePostButtons } from '../components/EditDeletePostButtons'\nimport { Layout } from '../components/Layout'\nimport { UpdootSection } from '../components/updootSection'\nimport { usePostsQuery } from '../generated/graphql'\n\nconst Index = () => {\n  const { data, loading, fetchMore, variables } = usePostsQuery({\n    variables: {\n      limit: 15,\n      cursor: null as null | string,\n    },\n    notifyOnNetworkStatusChange: true, //Enabling this option will also ensure that the value of loading updates accordingly\n  })\n  // variables is a in=build query method\n  if (!loading && !data) {\n    return <div> you got query failed for some reason</div>\n  }\n  return (\n    <Layout>\n      {!data && loading ? (\n        <div>loading</div>\n      ) : (\n        <Stack spacing={8}>\n          {data!.posts.posts.map((p) =>\n            // IMPORTANT: CAN'T READ PROPERTY 'ID' OF NULL if the ternary is removed. p.id,if p is null we do null.id\n            !p ? null : (\n              <Flex key={p.id} p={5} shadow=\"md\" borderWidth=\"1px\">\n                <UpdootSection post={p} />\n\n                <Box flex={1}>\n                  <NextLink href=\"/post/[id]\" as={`/post/${p.id}`}>\n                    {/* href=\"url in next js server\" as=\"real url\" */}\n                    <Link>\n                      <Heading fontSize=\"xl\">{p.title}</Heading>\n                    </Link>\n                  </NextLink>\n                  <Text>posted by {p.creator.username}</Text>\n                  <Flex>\n                    <Text flex={1} mt={4}>\n                      {p.textSnippet}\n                    </Text>\n                    <Box ml=\"auto\">\n                      <EditDeletePostButtons\n                        id={p.id}\n                        creatorId={p.creator.id}\n                      />\n                    </Box>\n                  </Flex>\n                </Box>\n              </Flex>\n            )\n          )}\n        </Stack>\n      )}\n      {data && data.posts.hasMore ? (\n        <Flex>\n          <Button\n            onClick={() => {\n              fetchMore({\n                variables: {\n                  limit: variables?.limit,\n                  cursor:\n                    data.posts.posts[data.posts.posts.length - 1].createdAt,\n                },\n                // updateQuery: (\n                //   previousValue,\n                //   { fetchMoreResult }\n                // ): PostsQuery => {\n                //   if (!fetchMoreResult) {\n                //     return previousValue as PostsQuery\n                //   }\n                //   return {\n                //     __typename: 'Query',\n                //     posts: {\n                //       __typename: 'PaginatedPosts',\n                //       hasMore: (fetchMoreResult as PostsQuery).posts.hasMore,\n                //       posts: [\n                //         ...(previousValue as PostsQuery).posts.posts,\n                //         ...(fetchMoreResult as PostsQuery).posts.posts,\n                //       ],\n                //     },\n                //   }\n                // },\n              })\n            }}\n            isLoading={loading}\n            m=\"auto\"\n            my={8}\n          >\n            load more\n          </Button>\n        </Flex>\n      ) : null}\n    </Layout>\n  )\n}\nexport default withApollo({ ssr: false })(Index)\n"]},"metadata":{},"sourceType":"module"}