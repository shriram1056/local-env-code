{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/shriram/Downloads/lireddit/lireddit-web/src/pages/login.tsx\";\nimport { Box, Button, Flex, Link } from '@chakra-ui/react';\nimport { Form, Formik } from 'formik';\nimport NextLink from 'next/link';\nimport { useRouter } from 'next/router';\nimport React from 'react';\nimport { InputField } from '../components/inputField';\nimport { Wrapper } from '../components/Wrapper';\nimport { useLoginMutation } from '../generated/graphql';\nimport { toErrorMap } from '../utils/toErrorMap';\nimport { withApollo } from '../utils/withApollo';\n\nconst Login = ({}) => {\n  const router = useRouter();\n  const [login] = useLoginMutation(); //To run a mutation, you first call useMutation within a React component and pass it a GraphQL string that represents the mutation.\n  //1:An object with fields that represent the current status of the mutation's execution.{fetching, error, and data}\n  // 2: A mutate function that you can call at any time to execute the mutation\n\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    variant: \"small\",\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        usernameOrEmail: '',\n        password: ''\n      },\n      onSubmit: async (values, {\n        setErrors\n      }) => {\n        var _response$data, _response$data2;\n\n        const response = await login({\n          variables: values\n        }); // this return a promise needed to stop the spinner or isSubmitting\n\n        if ((_response$data = response.data) !== null && _response$data !== void 0 && _response$data.login.errors) {\n          console.log(toErrorMap(response.data.login.errors));\n          setErrors(toErrorMap(response.data.login.errors));\n        } else if ((_response$data2 = response.data) !== null && _response$data2 !== void 0 && _response$data2.login.user) {\n          if (typeof router.query.next === 'string') {\n            router.push(router.query.next); // get the query in the url if next is there\n          } else {\n            router.push('/');\n          }\n        }\n      },\n      children: ({\n        isSubmitting\n      }) => /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(InputField, {\n          name: \"usernameOrEmail\",\n          placeholder: \"username or Email\",\n          label: \"username or Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          mt: 4,\n          children: /*#__PURE__*/_jsxDEV(InputField, {\n            name: \"password\",\n            placeholder: \"password\",\n            label: \"password\",\n            type: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Flex, {\n          mt: 2,\n          children: /*#__PURE__*/_jsxDEV(NextLink, {\n            href: \"/forgot-password\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              ml: \"auto\",\n              children: \"forgot password?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          mt: 4,\n          type: \"submit\",\n          colorScheme: \"teal\",\n          isLoading: isSubmitting,\n          children: \"login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n\nexport default withApollo({\n  ssr: false\n})(Login);","map":{"version":3,"sources":["/home/shriram/Downloads/lireddit/lireddit-web/src/pages/login.tsx"],"names":["Box","Button","Flex","Link","Form","Formik","NextLink","useRouter","React","InputField","Wrapper","useLoginMutation","toErrorMap","withApollo","Login","router","login","usernameOrEmail","password","values","setErrors","response","variables","data","errors","console","log","user","query","next","push","isSubmitting","ssr"],"mappings":"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","sourcesContent":["import { Box, Button, Flex, Link } from '@chakra-ui/react'\nimport { Form, Formik } from 'formik'\nimport NextLink from 'next/link'\nimport { useRouter } from 'next/router'\nimport React from 'react'\nimport { InputField } from '../components/inputField'\nimport { Wrapper } from '../components/Wrapper'\nimport { useLoginMutation } from '../generated/graphql'\nimport { toErrorMap } from '../utils/toErrorMap'\nimport { withApollo } from '../utils/withApollo'\nconst Login: React.FC<{}> = ({}) => {\n  const router = useRouter()\n  const [login] = useLoginMutation()\n  //To run a mutation, you first call useMutation within a React component and pass it a GraphQL string that represents the mutation.\n  //1:An object with fields that represent the current status of the mutation's execution.{fetching, error, and data}\n  // 2: A mutate function that you can call at any time to execute the mutation\n\n  return (\n    <Wrapper variant=\"small\">\n      <Formik\n        initialValues={{ usernameOrEmail: '', password: '' }}\n        onSubmit={async (values, { setErrors }) => {\n          const response = await login({ variables: values }) // this return a promise needed to stop the spinner or isSubmitting\n\n          if (response.data?.login.errors) {\n            console.log(toErrorMap(response.data.login.errors))\n            setErrors(toErrorMap(response.data.login.errors))\n          } else if (response.data?.login.user) {\n            if (typeof router.query.next === 'string') {\n              router.push(router.query.next) // get the query in the url if next is there\n            } else {\n              router.push('/')\n            }\n          }\n        }}\n      >\n        {({ isSubmitting }) => (\n          <Form>\n            <InputField\n              name=\"usernameOrEmail\"\n              placeholder=\"username or Email\"\n              label=\"username or Email\"\n            />\n            <Box mt={4}>\n              <InputField\n                name=\"password\"\n                placeholder=\"password\"\n                label=\"password\"\n                type=\"password\"\n              />\n            </Box>\n            <Flex mt={2}>\n              <NextLink href=\"/forgot-password\">\n                <Link ml=\"auto\">forgot password?</Link>\n              </NextLink>\n            </Flex>\n            <Button\n              mt={4}\n              type=\"submit\"\n              colorScheme=\"teal\"\n              isLoading={isSubmitting}\n            >\n              login\n            </Button>\n          </Form>\n        )}\n      </Formik>\n    </Wrapper>\n  )\n}\n\nexport default withApollo({ ssr: false })(Login)\n"]},"metadata":{},"sourceType":"module"}