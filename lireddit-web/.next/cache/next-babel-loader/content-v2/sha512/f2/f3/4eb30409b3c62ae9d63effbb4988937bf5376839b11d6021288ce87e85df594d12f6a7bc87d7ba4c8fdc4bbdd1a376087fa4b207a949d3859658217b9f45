{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/shriram/Downloads/lireddit/lireddit-web/src/pages/create-post.tsx\";\nimport { Box, Button } from '@chakra-ui/react';\nimport { Form, Formik } from 'formik';\nimport { withUrqlClient } from 'next-urql';\nimport { useRouter } from 'next/router';\nimport React from 'react';\nimport { InputField } from '../components/inputField';\nimport { Layout } from '../components/Layout';\nimport { useCreatePostMutation } from '../generated/graphql';\nimport { createUrqlClient } from '../utils/createUrqlClient';\n\nconst CreatePost = ({}) => {\n  const [, createPost] = useCreatePostMutation();\n  const router = useRouter();\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    variant: \"small\",\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        title: '',\n        text: ''\n      },\n      onSubmit: async (values, {\n        setErrors\n      }) => {\n        await createPost({\n          input: values\n        });\n        router.push('/');\n      },\n      children: ({\n        isSubmitting\n      }) => /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(InputField, {\n          name: \"title\",\n          placeholder: \"title\",\n          label: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          mt: 4,\n          children: /*#__PURE__*/_jsxDEV(InputField, {\n            textarea: true,\n            name: \"text\",\n            placeholder: \"text...\",\n            label: \"Body\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          mt: 4,\n          type: \"submit\",\n          colorScheme: \"teal\",\n          isLoading: isSubmitting,\n          children: \"createPost\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n\nexport default withUrqlClient(createUrqlClient)(CreatePost);","map":{"version":3,"sources":["/home/shriram/Downloads/lireddit/lireddit-web/src/pages/create-post.tsx"],"names":["Box","Button","Form","Formik","withUrqlClient","useRouter","React","InputField","Layout","useCreatePostMutation","createUrqlClient","CreatePost","createPost","router","title","text","values","setErrors","input","push","isSubmitting"],"mappings":";;AAAA,SAASA,GAAT,EAAcC,MAAd,QAA4B,kBAA5B;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,QAA7B;AACA,SAASC,cAAT,QAA+B,WAA/B;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,MAAT,QAAuB,sBAAvB;AACA,SAASC,qBAAT,QAAsC,sBAAtC;AACA,SAASC,gBAAT,QAAiC,2BAAjC;;AACA,MAAMC,UAAwB,GAAG,CAAC,EAAD,KAAQ;AACvC,QAAM,GAAGC,UAAH,IAAiBH,qBAAqB,EAA5C;AACA,QAAMI,MAAM,GAAGR,SAAS,EAAxB;AACA,sBACE,QAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,OAAhB;AAAA,2BACE,QAAC,MAAD;AACE,MAAA,aAAa,EAAE;AAAES,QAAAA,KAAK,EAAE,EAAT;AAAaC,QAAAA,IAAI,EAAE;AAAnB,OADjB;AAEE,MAAA,QAAQ,EAAE,OAAOC,MAAP,EAAe;AAAEC,QAAAA;AAAF,OAAf,KAAiC;AACzC,cAAML,UAAU,CAAC;AAAEM,UAAAA,KAAK,EAAEF;AAAT,SAAD,CAAhB;AACAH,QAAAA,MAAM,CAACM,IAAP,CAAY,GAAZ;AACD,OALH;AAAA,gBAOG,CAAC;AAAEC,QAAAA;AAAF,OAAD,kBACC,QAAC,IAAD;AAAA,gCACE,QAAC,UAAD;AAAY,UAAA,IAAI,EAAC,OAAjB;AAAyB,UAAA,WAAW,EAAC,OAArC;AAA6C,UAAA,KAAK,EAAC;AAAnD;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,GAAD;AAAK,UAAA,EAAE,EAAE,CAAT;AAAA,iCACE,QAAC,UAAD;AACE,YAAA,QAAQ,MADV;AAEE,YAAA,IAAI,EAAC,MAFP;AAGE,YAAA,WAAW,EAAC,SAHd;AAIE,YAAA,KAAK,EAAC;AAJR;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAFF,eAUE,QAAC,MAAD;AACE,UAAA,EAAE,EAAE,CADN;AAEE,UAAA,IAAI,EAAC,QAFP;AAGE,UAAA,WAAW,EAAC,MAHd;AAIE,UAAA,SAAS,EAAEA,YAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVF;AAAA;AAAA;AAAA;AAAA;AAAA;AARJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAiCD,CApCD;;AAqCA,eAAehB,cAAc,CAACM,gBAAD,CAAd,CAAiCC,UAAjC,CAAf","sourcesContent":["import { Box, Button } from '@chakra-ui/react'\nimport { Form, Formik } from 'formik'\nimport { withUrqlClient } from 'next-urql'\nimport { useRouter } from 'next/router'\nimport React from 'react'\nimport { InputField } from '../components/inputField'\nimport { Layout } from '../components/Layout'\nimport { useCreatePostMutation } from '../generated/graphql'\nimport { createUrqlClient } from '../utils/createUrqlClient'\nconst CreatePost: React.FC<{}> = ({}) => {\n  const [, createPost] = useCreatePostMutation()\n  const router = useRouter()\n  return (\n    <Layout variant=\"small\">\n      <Formik\n        initialValues={{ title: '', text: '' }}\n        onSubmit={async (values, { setErrors }) => {\n          await createPost({ input: values })\n          router.push('/')\n        }}\n      >\n        {({ isSubmitting }) => (\n          <Form>\n            <InputField name=\"title\" placeholder=\"title\" label=\"Title\" />\n            <Box mt={4}>\n              <InputField\n                textarea\n                name=\"text\"\n                placeholder=\"text...\"\n                label=\"Body\"\n              />\n            </Box>\n            <Button\n              mt={4}\n              type=\"submit\"\n              colorScheme=\"teal\"\n              isLoading={isSubmitting}\n            >\n              createPost\n            </Button>\n          </Form>\n        )}\n      </Formik>\n    </Layout>\n  )\n}\nexport default withUrqlClient(createUrqlClient)(CreatePost)\n"]},"metadata":{},"sourceType":"module"}