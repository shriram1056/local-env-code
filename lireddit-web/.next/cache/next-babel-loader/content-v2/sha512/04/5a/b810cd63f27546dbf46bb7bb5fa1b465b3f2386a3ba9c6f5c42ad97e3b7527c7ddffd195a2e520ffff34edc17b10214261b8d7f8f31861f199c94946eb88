{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"/home/shriram/Downloads/lireddit/lireddit-web/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/home/shriram/Downloads/lireddit/lireddit-web/src/pages/index.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { Box, Button, Flex, Heading, Link, Stack, Text } from '@chakra-ui/react';\nimport NextLink from 'next/link';\nimport React, { useState } from 'react';\nimport { EditDeletePostButtons } from '../components/EditDeletePostButtons';\nimport { Layout } from '../components/Layout';\nimport { UpdootSection } from '../components/updootSection';\nimport { usePostsQuery } from '../generated/graphql';\n\nvar Index = function Index() {\n  _s();\n\n  var _useState = useState({\n    limit: 15,\n    cursor: null\n  }),\n      variable = _useState[0],\n      setVariables = _useState[1];\n\n  var _usePostsQuery = usePostsQuery({\n    variables: variable\n  }),\n      _usePostsQuery2 = _slicedToArray(_usePostsQuery, 1),\n      _usePostsQuery2$ = _usePostsQuery2[0],\n      data = _usePostsQuery2$.data,\n      fetching = _usePostsQuery2$.fetching; // variables is a in=build query method\n\n\n  if (!fetching && !data) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \" you got query failed for some reason\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 12\n    }, _this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [!data && fetching ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, _this) : /*#__PURE__*/_jsxDEV(Stack, {\n      spacing: 8,\n      children: data.posts.posts.map(function (p) {\n        return (// IMPORTANT: CAN'T READ PROPERTY 'ID' OF NULL if the ternary is removed. p.id,if p is null we do null.id\n          !p ? null : /*#__PURE__*/_jsxDEV(Flex, {\n            p: 5,\n            shadow: \"md\",\n            borderWidth: \"1px\",\n            children: [/*#__PURE__*/_jsxDEV(UpdootSection, {\n              post: p\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 17\n            }, _this), /*#__PURE__*/_jsxDEV(Box, {\n              flex: 1,\n              children: [/*#__PURE__*/_jsxDEV(NextLink, {\n                href: \"/post/[id]\",\n                as: \"/post/\".concat(p.id),\n                children: /*#__PURE__*/_jsxDEV(Link, {\n                  children: /*#__PURE__*/_jsxDEV(Heading, {\n                    fontSize: \"xl\",\n                    children: p.title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 37,\n                    columnNumber: 23\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 36,\n                  columnNumber: 21\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 19\n              }, _this), /*#__PURE__*/_jsxDEV(Text, {\n                children: [\"posted by \", p.creator.username]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 19\n              }, _this), /*#__PURE__*/_jsxDEV(Flex, {\n                children: [/*#__PURE__*/_jsxDEV(Text, {\n                  flex: 1,\n                  mt: 4,\n                  children: p.textSnippet\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 42,\n                  columnNumber: 21\n                }, _this), /*#__PURE__*/_jsxDEV(Box, {\n                  ml: \"auto\",\n                  children: /*#__PURE__*/_jsxDEV(EditDeletePostButtons, {\n                    id: p.id,\n                    creatorId: p.creator.id\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 46,\n                    columnNumber: 23\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 45,\n                  columnNumber: 21\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 19\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 17\n            }, _this)]\n          }, p.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 15\n          }, _this)\n        );\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, _this), data && data.posts.hasMore ? /*#__PURE__*/_jsxDEV(Flex, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: function onClick() {\n          setVariables({\n            limit: variable.limit,\n            cursor: data.posts.posts[data.posts.posts.length - 1].createdAt\n          });\n        },\n        isLoading: fetching,\n        m: \"auto\",\n        my: 8,\n        children: \"load more\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, _this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Index, \"KhWZTojI9kr+sceaujux+mv43MY=\", false, function () {\n  return [usePostsQuery];\n});\n\n_c = Index;\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["/home/shriram/Downloads/lireddit/lireddit-web/src/pages/index.tsx"],"names":["Box","Button","Flex","Heading","Link","Stack","Text","NextLink","React","useState","EditDeletePostButtons","Layout","UpdootSection","usePostsQuery","Index","limit","cursor","variable","setVariables","variables","data","fetching","posts","map","p","id","title","creator","username","textSnippet","hasMore","length","createdAt"],"mappings":"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","sourcesContent":["import { Box, Button, Flex, Heading, Link, Stack, Text } from '@chakra-ui/react'\nimport NextLink from 'next/link'\nimport React, { useState } from 'react'\nimport { EditDeletePostButtons } from '../components/EditDeletePostButtons'\nimport { Layout } from '../components/Layout'\nimport { UpdootSection } from '../components/updootSection'\nimport { usePostsQuery } from '../generated/graphql'\n\nconst Index = () => {\n  const [variable, setVariables] = useState({\n    limit: 15,\n    cursor: null as null | string,\n  })\n  const [{ data, fetching }] = usePostsQuery({\n    variables: variable,\n  })\n  // variables is a in=build query method\n  if (!fetching && !data) {\n    return <div> you got query failed for some reason</div>\n  }\n  return (\n    <Layout>\n      {!data && fetching ? (\n        <div>loading</div>\n      ) : (\n        <Stack spacing={8}>\n          {data!.posts.posts.map((p) =>\n            // IMPORTANT: CAN'T READ PROPERTY 'ID' OF NULL if the ternary is removed. p.id,if p is null we do null.id\n            !p ? null : (\n              <Flex key={p.id} p={5} shadow=\"md\" borderWidth=\"1px\">\n                <UpdootSection post={p} />\n\n                <Box flex={1}>\n                  <NextLink href=\"/post/[id]\" as={`/post/${p.id}`}>\n                    {/* href=\"url in next js server\" as=\"real url\" */}\n                    <Link>\n                      <Heading fontSize=\"xl\">{p.title}</Heading>\n                    </Link>\n                  </NextLink>\n                  <Text>posted by {p.creator.username}</Text>\n                  <Flex>\n                    <Text flex={1} mt={4}>\n                      {p.textSnippet}\n                    </Text>\n                    <Box ml=\"auto\">\n                      <EditDeletePostButtons\n                        id={p.id}\n                        creatorId={p.creator.id}\n                      />\n                    </Box>\n                  </Flex>\n                </Box>\n              </Flex>\n            )\n          )}\n        </Stack>\n      )}\n      {data && data.posts.hasMore ? (\n        <Flex>\n          <Button\n            onClick={() => {\n              setVariables({\n                limit: variable.limit,\n                cursor: data.posts.posts[data.posts.posts.length - 1].createdAt,\n              })\n            }}\n            isLoading={fetching}\n            m=\"auto\"\n            my={8}\n          >\n            load more\n          </Button>\n        </Flex>\n      ) : null}\n    </Layout>\n  )\n}\nexport default Index\n"]},"metadata":{},"sourceType":"module"}